{
    "sourceFile": "app/Http/Controllers/GlobalController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1682742700646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1696840442761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n use App\\Models\\Tag_de;\n use App\\Models\\Space_tag_de;\n use App\\Models\\Space_tag;\n use App\\Models\\Stat;\n+use App\\Models\\Reference;\n use App\\Models\\Preference;\n use Carbon\\Carbon;\n use Database\\Seeders\\PlaceSeeder;\n use Pestopancake\\LaravelBackpackNotifications\\Notifications\\DatabaseNotification;\n"
                },
                {
                    "date": 1696841313830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1039,9 +1039,9 @@\n         $userid = backpack_auth()->user()->id;\n         $infos = Infosperso::where('user_id', $userid)->first();\n         $preferences = $infos->preferences;\n \n-        \n+        $preferences_array = \n \n         return view('preferences', compact('preferences'));\n     }\n \n"
                }
            ],
            "date": 1682742700646,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Infosperso;\nuse App\\Models\\User;\nuse App\\Models\\Street;\nuse App\\Models\\Building;\nuse App\\Models\\Openspace;\nuse App\\Models\\Opinion;\nuse App\\Models\\Opinion_de;\nuse App\\Models\\Comment_en;\nuse App\\Models\\Comment_de;\nuse App\\Models\\Pages;\nuse App\\Models\\Tag;\nuse App\\Models\\Tag_de;\nuse App\\Models\\Space_tag_de;\nuse App\\Models\\Space_tag;\nuse App\\Models\\Stat;\nuse App\\Models\\Preference;\nuse Carbon\\Carbon;\nuse Pestopancake\\LaravelBackpackNotifications\\Notifications\\DatabaseNotification;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Redirect;\nuse Illuminate\\Support\\Facades\\Session;\nuse Illuminate\\Support\\Facades\\Log;\n\nclass GlobalController extends Controller\n{\n    /**\n     * Handle the incoming request.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function getAll()\n    {\n        if (backpack_auth()->check()) {\n            $userid = backpack_auth()->user()->id;\n            if (Infosperso::where('user_id', $userid)->exists()) {\n                $infos = Infosperso::where('user_id', $userid)->first();\n                $street = Street::all();\n                $building = Building::all();\n                $openspace = Openspace::all();\n                $tagstreet = Tag::where('Category', 'Street')->get();\n                $tagbuilding = Tag::where('Category', 'Building')->get();\n                $tagopenspace = Tag::where('Category', 'Openspace')->get();\n\n                $all_data = array_merge(\n                    $street->toArray(),\n                    $building->toArray(),\n                    $openspace->toArray()\n                );\n\n                return view(\n                    'home',\n                    compact(\n                        'infos',\n                        'all_data',\n                        'tagstreet',\n                        'tagbuilding',\n                        'tagopenspace',\n                        'userid'\n                    )\n                );\n            } else {\n                $infos = new Infosperso();\n                $infos->user_id = $userid;\n                $infos->save();\n                return view('profil');\n            }\n        } else {\n            return view('index');\n        }\n    }\n\n    public function leaderboard()\n    {\n        $users = User::all();\n        $street = Street::all();\n        $building = Building::all();\n        $openspace = Openspace::all();\n        //sort by usr->score\n        $users = $users->sortByDesc('score');\n        return view('leaderboard', compact('users', 'street', 'building', 'openspace'));\n    }\n\n    public function comment(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        $locale = session()->get('locale');\n\n        if ($locale == 'de') {\n            $comment = new Comment_de();\n            $comment->user_id = $userid;\n            $comment->placeid = $request->id;\n            $comment->type = $request->type;\n            if ($request->type == 'street') {\n                $street = Street::find($request->id);\n                if ($street->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $street->comments = $street->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $street->save();\n                }\n            } elseif ($request->type == 'building') {\n                $building = Building::find($request->id);\n                if ($building->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $building->comments = $building->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $building->save();\n                }\n            } elseif ($request->type == 'openspace') {\n                $openspace = Openspace::find($request->id);\n                if ($openspace->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $openspace->comments = $openspace->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $openspace->save();\n                }\n            }\n            $comment->comment = $request->comment;\n            $comment->save();\n        } else {\n            $comment = new Comment_en();\n            $comment->user_id = $userid;\n            $comment->placeid = $request->id;\n            $comment->type = $request->type;\n            if ($request->type == 'street') {\n                $street = Street::find($request->id);\n                if ($street->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $street->comments = $street->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $street->save();\n                }\n            } elseif ($request->type == 'building') {\n                $building = Building::find($request->id);\n                if ($building->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $building->comments = $building->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $building->save();\n                }\n            } elseif ($request->type == 'openspace') {\n                $openspace = Openspace::find($request->id);\n                if ($openspace->user_id == $userid) {\n                    return 'your';\n                } else {\n                    $openspace->comments = $openspace->comments + 1;\n                    backpack_auth()->user()->score + 1;\n                    backpack_auth()->user()->save();\n                    $openspace->save();\n                }\n            }\n            $comment->comment = $request->comment;\n            $comment->save();\n        }\n\n        return 'commented';\n    }\n\n    public function like(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            if (\n                Stat::where('street_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->street_id = $request->id;\n                $stat->likes = 1;\n                $stat->save();\n                $street = Street::find($request->id);\n                $street->likes = $street->likes + 1;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'building') {\n            if (\n                Stat::where('building_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->building_id = $request->id;\n                $stat->likes = 1;\n                $stat->save();\n                $building = Building::find($request->id);\n                $building->likes = $building->likes + 1;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'openspace') {\n            if (\n                Stat::where('openspace_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->openspace_id = $request->id;\n                $stat->likes = 1;\n                $stat->save();\n                $openspace = Openspace::find($request->id);\n                $openspace->likes = $openspace->likes + 1;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        }\n    }\n\n    public function dislike(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            if (\n                Stat::where('street_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->street_id = $request->id;\n                $stat->dislike = 1;\n                $stat->save();\n                $street = Street::find($request->id);\n                $street->dislike = $street->dislike + 1;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'building') {\n            if (\n                Stat::where('building_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->building_id = $request->id;\n                $stat->dislike = 1;\n                $stat->save();\n                $building = Building::find($request->id);\n                $building->dislike = $building->dislike + 1;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'openspace') {\n            if (\n                Stat::where('openspace_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->openspace_id = $request->id;\n                $stat->dislike = 1;\n                $stat->save();\n                $openspace = Openspace::find($request->id);\n                $openspace->dislike = $openspace->dislike + 1;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        }\n    }\n\n    public function stars(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            if (\n                Stat::where('street_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->street_id = $request->id;\n                $stat->stars = 1;\n                $stat->save();\n                $street = Street::find($request->id);\n                $street->stars = $street->stars + 1;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'building') {\n            if (\n                Stat::where('building_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->building_id = $request->id;\n                $stat->stars = 1;\n                $stat->save();\n                $building = Building::find($request->id);\n                $building->stars = $building->stars + 1;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'openspace') {\n            if (\n                Stat::where('openspace_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->openspace_id = $request->id;\n                $stat->stars = 1;\n                $stat->save();\n                $openspace = Openspace::find($request->id);\n                $openspace->stars = $openspace->stars + 1;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        }\n    }\n\n    public function bof(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            if (\n                Stat::where('street_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->street_id = $request->id;\n                $stat->bof = 1;\n                $stat->save();\n                $street = Street::find($request->id);\n                $street->bof = $street->bof + 1;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'building') {\n            if (\n                Stat::where('building_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->building_id = $request->id;\n                $stat->bof = 1;\n                $stat->save();\n                $building = Building::find($request->id);\n                $building->bof = $building->bof + 1;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'openspace') {\n            if (\n                Stat::where('openspace_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->openspace_id = $request->id;\n                $stat->bof = 1;\n                $stat->save();\n                $openspace = Openspace::find($request->id);\n                $openspace->bof = $openspace->bof + 1;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        }\n    }\n\n    public function weird(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            if (\n                Stat::where('street_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->street_id = $request->id;\n                $stat->weird = 1;\n                $stat->save();\n                $street = Street::find($request->id);\n                $street->weird = $street->weird + 1;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'building') {\n            if (\n                Stat::where('building_id', $request->id)\n                    ->where('user_id', $userid)\n                    ->doesntExist()\n            ) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->building_id = $request->id;\n                $stat->weird = 1;\n                $stat->save();\n                $building = Building::find($request->id);\n                $building->weird = $building->weird + 1;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        } elseif ($request->type == 'openspace') {\n            if (Stat::where('openspace_id', $request->id)->doesntExist()) {\n                $stat = new Stat();\n                $stat->user_id = $userid;\n                $stat->openspace_id = $request->id;\n                $stat->weird = 1;\n                $stat->save();\n                $openspace = Openspace::find($request->id);\n                $openspace->weird = $openspace->weird + 1;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            } else {\n                return 'already';\n            }\n        }\n    }\n\n    public function profil()\n    {\n        return view('home');\n    }\n\n    private function haversine($lat1, $lon1, $lat2, $lon2){\n        $earthRadius = 6371000; // in meters\n        $dLat = deg2rad($lat2 - $lat1);\n        $dLon = deg2rad($lon2 - $lon1);\n        $a = sin($dLat/2) * sin($dLat/2) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * sin($dLon/2) * sin($dLon/2);\n        $c = 2 * atan2(sqrt($a), sqrt(1-$a));\n        $distance = $earthRadius * $c;\n    \n        return $distance;\n    }\n\n    public function profile()\n    {\n        $userid = backpack_auth()->user()->id;\n        $locale = session()->get('locale');\n        $name = backpack_auth()->user()->name;\n        $score = backpack_auth()->user()->score;\n        $infos = Infosperso::where('user_id', $userid)->first();\n\n        $street = Street::where('user_id', $userid)->get();\n        $building = Building::where('user_id', $userid)->get();\n        $openspace = Openspace::where('user_id', $userid)->get();\n        $sumcomment =\n            Street::where('user_id', $userid)->sum('comments') +\n            Building::where('user_id', $userid)->sum('comments') +\n            Openspace::where('user_id', $userid)->sum('comments');\n        $sumreaction =\n            Street::where('user_id', $userid)->sum('likes') +\n            Street::where('user_id', $userid)->sum('dislikes') +\n            Street::where('user_id', $userid)->sum('stars') +\n            Street::where('user_id', $userid)->sum('bof') +\n            Street::where('user_id', $userid)->sum('weird') +\n            Building::where('user_id', $userid)->sum('likes') +\n            Building::where('user_id', $userid)->sum('dislikes') +\n            Building::where('user_id', $userid)->sum('stars') +\n            Building::where('user_id', $userid)->sum('bof') +\n            Building::where('user_id', $userid)->sum('weird') +\n            Openspace::where('user_id', $userid)->sum('likes') +\n            Openspace::where('user_id', $userid)->sum('dislikes') +\n            Openspace::where('user_id', $userid)->sum('stars') +\n            Openspace::where('user_id', $userid)->sum('bof') +\n            Openspace::where('user_id', $userid)->sum('weird');\n        //count how many street image are not null\n        $countimage =\n            Street::where('user_id', $userid)\n                ->whereNotNull('image')\n                ->count() +\n            Street::where('user_id', $userid)\n                ->whereNotNull('image0')\n                ->count() +\n            Building::where('user_id', $userid)\n                ->whereNotNull('image')\n                ->count() +\n            Building::where('user_id', $userid)\n                ->whereNotNull('image0')\n                ->count() +\n            Openspace::where('user_id', $userid)\n                ->whereNotNull('image')\n                ->count() +\n            Openspace::where('user_id', $userid)\n                ->whereNotNull('image0')\n                ->count();\n\n        if ($locale == 'de') {\n            $mycomments = Comment_de::where('user_id', $userid)->get();\n        } else {\n            $mycomments = Comment_en::where('user_id', $userid)->get();\n        }\n\n        $countall = count($street) + count($building) + count($openspace);\n        $countstreet = count($street);\n        $countbuilding = count($building);\n        $countopenspace = count($openspace);\n        $countmycomments = count($mycomments);\n        \n  \n        $streets = Street::where('user_id', $userid)->get();\n        $buildings = Building::where('user_id', $userid)->get();\n        $openspaces = Openspace::where('user_id', $userid)->get();\n\n        $explorer = '0';\n        // if distance between street entries is more than 50m then explorer = 1\n        foreach ($streets as $street) {\n\n            // compare distance with other streets\n            foreach ($streets as $otherStreet) {\n                if ($street->id !== $otherStreet->id) {\n                    $distance = $this->haversine($street->latitude, $street->longitude, $otherStreet->latitude, $otherStreet->longitude);\n    \n                    if ($distance > 50) {\n                        $explorer = '1';\n                        break;\n                    }\n                }\n            }\n    \n        }\n\n        foreach ($buildings as $building) {\n\n   \n            foreach ($buildings as $otherStreet) {\n                if ($building->id !== $otherStreet->id) {\n                    $distance = $this->haversine($building->latitude, $building->longitude, $otherStreet->latitude, $otherStreet->longitude);\n    \n                    if ($distance > 50) {\n                        $explorer = '1';\n                        break;\n                    }\n                }\n            }\n    \n        }\n\n        foreach ($openspaces as $openspace) {\n\n  \n            foreach ($openspaces as $otherStreet) {\n                if ($openspace->id !== $otherStreet->id) {\n                    $distance = $this->haversine($openspace->latitude, $openspace->longitude, $otherStreet->latitude, $otherStreet->longitude);\n    \n                    if ($distance > 50) {\n                        $explorer = '1';\n                        break;\n                    }\n                }\n            }\n    \n        }\n    \n\n\n \n        if ($countall > 9) {\n            $citymaker = '1';\n        } else {\n            $citymaker = '0';\n        }\n\n        if ($countstreet > 9) {\n            $flaneur = '1';\n        } else {\n            $flaneur = '0';\n        }\n\n        if ($countbuilding > 9) {\n            $architect = '1';\n        } else {\n            $architect = '0';\n        }\n\n        if ($countopenspace > 9) {\n            $urbanist = '1';\n        } else {\n            $urbanist = '0';\n        }\n\n        if ($score == 500) {\n            $supermapper = '1';\n        } else {\n            $supermapper = '0';\n        }\n\n        if ($sumreaction > 19) {\n            $star = '1';\n        } else {\n            $star = '0';\n        }\n\n        if ($sumcomment > 9) {\n            $influencer = '1';\n        } else {\n            $influencer = '0';\n        }\n\n        if ($countmycomments > 9) {\n            $guru = '1';\n        } else {\n            $guru = '0';\n        }\n\n        if ($countimage > 9) {\n            $investigator = '1';\n        } else {\n            $investigator = '0';\n        }\n\n        // dd($citymaker);\n        return view(\n            'profile',\n            compact(\n                'name',\n                'infos',\n                'score',\n                'citymaker',\n                'flaneur',\n                'architect',\n                'urbanist',\n                'supermapper',\n                'influencer',\n                'guru',\n                'star',\n                'investigator',\n                'explorer'\n            )\n        );\n    }\n\n    public function saveprofile(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        $infos = Infosperso::where('user_id', $userid)->first();\n        if (backpack_auth()->user()->score > 0) {\n            backpack_auth()->user()->email = $request->email;\n            backpack_auth()\n                ->user()\n                ->save();\n            Infosperso::where('user_id', $userid)->update([\n                'email' => $request->email,\n                'age' => $request->age,\n                'gender' => $request->gender,\n                'profession' => $request->profession,\n            ]);\n\n            return redirect('preferences');\n        } else {\n            backpack_auth()->user()->email = $request->email;\n            backpack_auth()\n                ->user()\n                ->save();\n            $infos = Infosperso::where('user_id', $userid)->first();\n            $infos->user_id = $userid;\n            $infos->age = $request->age;\n            if ($request->age != null) {\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $infos->gender = $request->gender;\n            if ($request->gender != null) {\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $infos->profession = $request->profession;\n            if ($request->profession != null) {\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $infos->newuser = 0;\n            $infos->save();\n            return redirect('preferences');\n        }\n    }\n\n    public function savepreferences(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        $infos = Infosperso::where('user_id', $userid)->first();\n        $infos->preferences = $request->preferences;\n        $infos->save();\n        if (backpack_auth()->user()->score > 3) {\n        } else {\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n        }\n        return redirect('/');\n    }\n\n    public function preferences()\n    {\n        $userid = backpack_auth()->user()->id;\n        $infos = Infosperso::where('user_id', $userid)->first();\n        $preferences = $infos->preferences;\n\n        return view('preferences', compact('preferences'));\n    }\n\n    public function street()\n    {\n        $tags = Tag::where('category', 'street')\n            ->where('personal', null)\n            ->get();\n        $tags_de = Tag_de::where('category', 'street')\n            ->where('personal', null)\n            ->get();\n\n        return view('street_mapping', compact('tags', 'tags_de'));\n    }\n\n    public function building()\n    {\n        $tags = Tag::where('category', 'building')\n            ->where('personal', null)\n            ->get();\n        $tags_de = Tag_de::where('category', 'building')\n            ->where('personal', null)\n            ->get();\n\n        return view('building_mapping', compact('tags', 'tags_de'));\n    }\n\n    public function openspace()\n    {\n        $tags = Tag::where('category', 'openspace')\n            ->where('personal', null)\n            ->get();\n        $tags_de = Tag_de::where('category', 'openspace')\n            ->where('personal', null)\n            ->get();\n\n        return view('openspace_mapping', compact('tags', 'tags_de'));\n    }\n\n    public function newtag(Request $request)\n    {\n        $locale = session()->get('locale');\n        if ($locale == 'en') {\n            $stag = Tag::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $tag = new Tag();\n            }\n        } elseif ($locale == 'de') {\n            $stag = Tag_de::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $tag = new Tag_de();\n            }\n        } else {\n            $stag = Tag::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $tag = new Tag();\n            }\n        }\n\n        $tag->name = $request->name;\n        $tag->personal = 1;\n        $tag->category = $request->category;\n        $tag->save();\n        return $request->name;\n    }\n\n    public function newopinion(Request $request)\n    {\n        $locale = session()->get('locale');\n        if ($locale == 'en') {\n            $stag = Opinion::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $opinion = new Opinion();\n            }\n        } elseif ($locale == 'de') {\n            $stag = Opinion_de::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $opinion = new Opinion_de();\n            }\n        } else {\n            $stag = Opinion::where('name', $request->name)->first();\n            if ($stag) {\n                return $request->name;\n            } else {\n                $opinion = new Opinion();\n            }\n        }\n        $opinion->name = $request->name;\n        $opinion->personal = 1;\n        $opinion->save();\n        return $request->name;\n    }\n\n    public function newplace(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'Street') {\n            $street = new Street();\n            $street->name = $request->name;\n            $street->user_id = $userid;\n            $street->type = 'Street';\n            if ($request->latitude && $request->longitude != null ){\n            $street->latitude = $request->latitude;\n            $street->longitude = $request->longitude;\n            } else {\n                $street->latitude = 0;\n                $street->longitude = 0;\n            }\n            //convert array tags to string\n            if ($request->tags == null) {\n                $street->tags = null;\n            } else {\n                $tags = $request->tags;\n                $street->tags = implode(',', $tags);\n            }\n\n            //add 1 point for each tag\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $street->save();\n            //return the id after saving\n            $streetid = $street->id;\n            return $streetid . '&type=street';\n        } elseif ($request->type == 'Building') {\n            $building = new Building();\n            $building->name = $request->name;\n            $building->user_id = $userid;\n            $building->type = 'Building';\n            if ($request->latitude && $request->longitude != null ){\n            $building->latitude = $request->latitude;\n            $building->longitude = $request->longitude;\n            } else {\n                $building->latitude = 0;\n                $building->longitude = 0;\n            }\n            $tags = $request->tags;\n            $building->tags = implode(',', $tags);\n            if ($request->tags == null) {\n                $building->tags = null;\n            } else {\n                $tags = $request->tags;\n                $building->tags = implode(',', $tags);\n            }\n\n            //add 1 point for each tag\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $building->save();\n            //return the id after saving\n            $buildingid = $building->id;\n            return $buildingid . '&type=building';\n        } elseif ($request->type == 'Openspace') {\n            $openspace = new Openspace();\n            $openspace->name = $request->name;\n            $openspace->user_id = $userid;\n            $openspace->type = 'Openspace';\n            if ($request->latitude && $request->longitude != null ){\n            $openspace->latitude = $request->latitude;\n            $openspace->longitude = $request->longitude;\n            } else {\n                $openspace->latitude = 0;\n                $openspace->longitude = 0;\n            }\n            $tags = $request->tags;\n            $openspace->tags = implode(',', $tags);\n            if ($request->tags == null) {\n                $openspace->tags = null;\n            } else {\n                $tags = $request->tags;\n                $openspace->tags = implode(',', $tags);\n            }\n\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $openspace->save();\n            //return the id after saving\n            $openspaceid = $openspace->id;\n            return $openspaceid . '&type=openspace';\n        } else {\n            return 'error';\n        }\n    }\n\n    public function opinions(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $opinions = $request->opinions;\n            $street->opinions = implode(',', $opinions);\n            $street->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            return $request->placeid . '&type=street';\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $opinions = $request->opinions;\n            $building->opinions = implode(',', $opinions);\n            $building->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            return $request->placeid . '&type=building';\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $opinions = $request->opinions;\n            $openspace->opinions = implode(',', $opinions);\n            $openspace->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            return $request->placeid . '&type=openspace';\n        }\n    }\n\n    public function feeling(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        $placeid = $request->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->id);\n            $street->feeling = $request->feeling;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->id);\n            $building->feeling = $request->feeling;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->id);\n            $openspace->feeling = $request->feeling;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $openspace->save();\n        }\n        return $placeid;\n    }\n\n    static function allopinions()\n    {\n        $locale = session()->get('locale');\n        if ($locale == 'en') {\n            $opinions = Opinion::where('personal', null)->get();\n        } elseif ($locale == 'de') {\n            $opinions = Opinion_de::where('personal', null)->get();\n        } else {\n            $opinions = Opinion::where('personal', null)->get();\n        }\n\n        return $opinions;\n    }\n\n    public function avatar(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        //dd($request->all());\n        $request->validate([\n            'image' => 'required|image|mimes:jpeg,png,jpg',\n        ]);\n\n        $imageName = time() . '.' . $request->image->extension();\n\n        $request->image->storeAs('public/uploads/avatar/', $imageName);\n\n        $user = User::find($userid);\n\n        backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n        backpack_auth()\n            ->user()\n            ->save();\n\n        $user->avatar = $imageName;\n        $user->save();\n\n        return back();\n    }\n\n    public function dashboard()\n    {\n        $userid = backpack_auth()->user()->id;\n        $street = Street::where('user_id', $userid)->get();\n        $building = Building::where('user_id', $userid)->get();\n        $openspace = Openspace::where('user_id', $userid)->get();\n        $infos = Infosperso::where('user_id', $userid)->first();\n        $score = backpack_auth()->user()->score;\n    \n\n        $all_data = array_merge(\n            $street->toArray(),\n            $building->toArray(),\n            $openspace->toArray()\n        );\n\n        return view('dashboard', compact('all_data', 'score'));\n    }\n\n    public function store0(Request $request)\n    {\n        //dd($request->all());\n        $userid = backpack_auth()->user()->id;\n        // dd($request->all());\n        if($userid){\n            if ($request->type == 'street') {\n                $street = Street::find($request->placeid);\n                if ($request->imagefirst != null) {\n                    $imageName =\n                        $street->name . '.' . $request->imagefirst->extension();\n                    $request->imagefirst->storeAs(\n                        'public/uploads/street/feeling/',\n                        $imageName\n                    );\n                    $street->image0 = '/uploads/street/feeling/' . $imageName;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->save();\n                }\n                if ($request->description != null) {\n                    $street->description = $request->description;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                }\n                backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                $street->save();\n            } elseif ($request->type == 'building') {\n                $building = Building::find($request->placeid);\n                if ($request->imagefirst != null) {\n                    $imageName =\n                        $building->name . '.' . $request->imagefirst->extension();\n                    $request->imagefirst->storeAs(\n                        'public/uploads/building/feeling/',\n                        $imageName\n                    );\n                    $building->image0 = '/uploads/building/feeling/' . $imageName;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->save();\n                }\n                if ($request->description != null) {\n                    $building->description = $request->description;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                }\n                backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                $building->save();\n            } elseif ($request->type == 'openspace') {\n                $openspace = Openspace::find($request->placeid);\n                if ($request->imagefirst != null) {\n                    $imageName =\n                        $openspace->name . '.' . $request->imagefirst->extension();\n                    $request->imagefirst->storeAs(\n                        'public/uploads/openspace/feeling/',\n                        $imageName\n                    );\n                    $openspace->image0 = '/uploads/openspace/feeling/' . $imageName;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->save();\n                }\n                if ($request->description != null) {\n                    $openspace->description = $request->description;\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                }\n                backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                $openspace->save();\n            }\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n        session()->put('placeid', $placeid);\n        session()->put('type', $type);\n\n        return view('step3', compact('placeid', 'type'));\n    }\n\n    public function store(Request $request)\n    {\n        // dd($request->all());\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            if ($request->image != null) {\n                $imageName = $street->name . '.' . $request->image->extension();\n                $request->image->storeAs(\n                    'public/uploads/street/tochange/',\n                    $imageName\n                );\n                $street->image = '/uploads/street/tochange/' . $imageName;\n                $street->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 5;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            if ($request->description2 != null) {\n                $street->description2 = $request->description2;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $street->change = $request->change;\n            $street->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            if ($request->image != null) {\n                $imageName =\n                    $building->name . '.' . $request->image->extension();\n                $request->image->storeAs(\n                    'public/uploads/building/tochange/',\n                    $imageName\n                );\n                $building->image = '/uploads/building/tochange/' . $imageName;\n                $building->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 5;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n\n            if ($request->description2 != null) {\n                $building->description2 = $request->description2;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $building->change = $request->change;\n            $building->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            if ($request->image != null) {\n                $imageName =\n                    $openspace->name . '.' . $request->image->extension();\n                $request->image->storeAs(\n                    'public/uploads/openspace/tochange/',\n                    $imageName\n                );\n                $openspace->image = '/uploads/openspace/tochange/' . $imageName;\n                $openspace->save();\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 5;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            if ($request->description2 != null) {\n                $openspace->description2 = $request->description2;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n            }\n            $openspace->change = $request->change;\n            $openspace->save();\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step5', compact('placeid', 'type'));\n    }\n\n    public function confortlevel(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $street->confort = $request->level;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $building->confort = $request->level;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $openspace->confort = $request->level;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $openspace->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step6', compact('placeid', 'type'));\n    }\n\n    public function enjoy(Request $request)\n    {\n        // dd($request->all());\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            if ($request->action == 'rest') {\n                $street->rest = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->rest_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'movement') {\n                $street->movement = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->movement_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'activities') {\n                $street->activities = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->activities_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'orientation') {\n                $street->orientation = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->orientation_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'weather') {\n                $street->weather = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->weather_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'facilities') {\n                $street->facilities = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->facilities_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'noise') {\n                $street->noise = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->noise_text = $request->text;\n                }\n                $street->save();\n            }\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            if ($request->action == 'rest') {\n                $building->rest = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->rest_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'movement') {\n                $building->movement = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->movement_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'activities') {\n                $building->activities = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->activities_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'orientation') {\n                $building->orientation = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->orientation_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'weather') {\n                $building->weather = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->weather_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'facilities') {\n                $building->facilities = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->facilities_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'noise') {\n                $building->noise = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->noise_text = $request->text;\n                }\n\n                $building->save();\n            }\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            if ($request->action == 'rest') {\n                $openspace->rest = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->rest_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'movement') {\n                $openspace->movement = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->movement_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'activities') {\n                $openspace->activities = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->activities_text = $request->text;\n                }\n                $openspace->save();\n            }\n            if ($request->action == 'orientation') {\n                $openspace->orientation = $request->value;\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->orientation_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'weather') {\n                $openspace->weather = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->weather_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'noise') {\n                $openspace->noise = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->noise_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n        }\n\n        return 'ok';\n    }\n\n    public function enjoyable(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $street->enjoyable = $request->enjoyable;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $building->enjoyable = $request->enjoyable;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $openspace->enjoyable = $request->enjoyable;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $openspace->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step7', compact('placeid', 'type'));\n    }\n\n    public function enjoydetail(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            if ($request->action == 'talking') {\n                $street->talking = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->talking_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'cleanliness') {\n                $street->cleanliness = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->cleanliness_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'plants') {\n                $street->plants = $request->value;\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->plants_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'sunlight') {\n                $street->sunlight = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->sunlight_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'interesting') {\n                $street->interesting = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->interesting_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'shade') {\n                $street->shade = $request->value;\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->shade_text = $request->text;\n                }\n                $street->save();\n            }\n            if ($request->action == 'beauty') {\n                $street->beauty = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->beauty_text = $request->text;\n                }\n                $street->save();\n            }\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            if ($request->action == 'talking') {\n                $building->talking = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->talking_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'cleanliness') {\n                $building->cleanliness = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->cleanliness_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'plants') {\n                $building->plants = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->plants_text = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'sunlight') {\n                $building->sunlight = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->sunlight_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'interesting') {\n                $building->interesting = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->interesting_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'shade') {\n                $building->shade = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->shade_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'beauty') {\n                $building->beauty = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->beauty_text = $request->text;\n                }\n\n                $building->save();\n            }\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            if ($request->action == 'talking') {\n                $openspace->talking = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->talking_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'cleanliness') {\n                $openspace->cleanliness = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->cleanliness_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'plants') {\n                $openspace->plants = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->plants_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'sunlight') {\n                $openspace->sunlight = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->sunlight_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'interesting') {\n                $openspace->interesting = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->interesting_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'shade') {\n                $openspace->shade = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->shade_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'beauty') {\n                $openspace->beauty = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->beauty_text = $request->text;\n                }\n                $openspace->save();\n            }\n        }\n        return 'ok';\n    }\n\n    public function protected(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $street->protected = $request->protected;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $building->protected = $request->protected;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $openspace->protected = $request->protected;\n            backpack_auth()->user()->score = backpack_auth()->user()->score + 1;\n            backpack_auth()\n                ->user()\n                ->save();\n            $openspace->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step8', compact('placeid', 'type'));\n    }\n\n    public function protectedetail(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            if ($request->action == 'protection') {\n                $street->protection = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->protection_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'polluants') {\n                $street->polluants = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->polluants_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'night') {\n                $street->night = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->night_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'hazards') {\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->hazards = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'dangerous') {\n                $street->dangerous = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->dangerous_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'protection_harm') {\n                $street->protection_harm = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->protection_harm_text = $request->text;\n                }\n\n                $street->save();\n            }\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            if ($request->action == 'protection') {\n                $building->protection = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->protection_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'polluants') {\n                $building->polluants = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->polluants_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'night') {\n                $building->night = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->night_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'hazards') {\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->hazards = $request->text;\n                }\n                $building->save();\n            }\n            if ($request->action == 'dangerous') {\n                $building->dangerous = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->dangerous_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'protection_harm') {\n                $building->protection_harm = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->protection_harm_text = $request->text;\n                }\n\n                $building->save();\n            }\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            if ($request->action == 'protection') {\n                $openspace->protection = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->protection_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'polluants') {\n                $openspace->polluants = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->polluants_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'night') {\n                $openspace->night = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->night_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'hazards') {\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->hazards = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'dangerous') {\n                $openspace->dangerous = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->dangerous_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'protection_harm') {\n                $openspace->protection_harm = $request->value;\n                backpack_auth()->user()->score =\n                    backpack_auth()->user()->score + 1;\n                backpack_auth()\n                    ->user()\n                    ->save();\n\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->protection_harm_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n        }\n\n        return 'ok';\n    }\n\n    public function timespending(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $street->time_spending = $request->step8;\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $building->time_spending = $request->step8;\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $openspace->time_spending = $request->step8;\n            $openspace->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step9', compact('placeid', 'type'));\n    }\n\n    public function timespendingdetail(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            if ($request->action == 'spend_time') {\n                $street->spend_time = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->spend_time_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'meeting') {\n                $street->meeting = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->meeting_text = $request->text;\n                }\n\n                $street->save();\n            }\n            if ($request->action == 'events') {\n                $street->events = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->events_text = $request->text;\n                }\n\n                $street->save();\n            }\n\n            if ($request->action == 'multifunctional') {\n                $street->multifunctional = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $street->multifunctional_text = $request->text;\n                }\n\n                $street->save();\n            }\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            if ($request->action == 'spend_time') {\n                $building->spend_time = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->spend_time_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'meeting') {\n                $building->meeting = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->meeting_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'events') {\n                $building->events = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->events_text = $request->text;\n                }\n\n                $building->save();\n            }\n            if ($request->action == 'multifunctional') {\n                $building->multifunctional = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $building->multifunctional_text = $request->text;\n                }\n\n                $building->save();\n            }\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            if ($request->action == 'spend_time') {\n                $openspace->spend_time = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->spend_time_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'meeting') {\n                $openspace->meeting = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->meeting_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'events') {\n                $openspace->events = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 1;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->meeting_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n            if ($request->action == 'multifunctional') {\n                $openspace->multifunctional = $request->value;\n                if ($request->text != null) {\n                    backpack_auth()->user()->score =\n                        backpack_auth()->user()->score + 5;\n                    backpack_auth()\n                        ->user()\n                        ->save();\n                    $openspace->multifunctional_text = $request->text;\n                }\n\n                $openspace->save();\n            }\n        }\n\n        return 'ok';\n        // return view('step10', compact('placeid', 'type'));\n    }\n\n    public function spaceusage(Request $request)\n    {\n        $placeid = $request->placeid;\n        $type = $request->type;\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $street->spaceusage = $request->know_space;\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $building->spaceusage = $request->know_space;\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $openspace->spaceusage = $request->know_space;\n            $openspace->save();\n        }\n\n        $placeid = $request->placeid;\n        $type = $request->type;\n\n        return view('step10', compact('placeid', 'type'));\n    }\n\n    public function spaceusagedetail(Request $request)\n    {\n        $userid = backpack_auth()->user()->id;\n\n        if ($request->type == 'street') {\n            $street = Street::find($request->placeid);\n            $spacetag = $request->spacetag;\n            $street->usagedetail = implode(',', $spacetag);\n            $street->save();\n        } elseif ($request->type == 'building') {\n            $building = Building::find($request->placeid);\n            $spacetag = $request->spacetag;\n            $building->usagedetail = implode(',', $spacetag);\n            $building->save();\n        } elseif ($request->type == 'openspace') {\n            $openspace = Openspace::find($request->placeid);\n            $spacetag = $request->spacetag;\n            $openspace->usagedetail = implode(',', $spacetag);\n            $openspace->save();\n        }\n\n        return 'ok';\n    }\n\n    static function allspacetag()\n    {\n        $locale = session()->get('locale');\n        if ($locale == 'en') {\n            $spacetags = Space_tag::where('personal', null)->get();\n        } elseif ($locale == 'de') {\n            $spacetags = Space_tag_de::where('personal', null)->get();\n        } else {\n            $spacetags = Space_tag::where('personal', null)->get();\n        }\n        return $spacetags;\n    }\n\n    public function newspacetag(Request $request)\n    {\n        $locale = session()->get('locale');\n        if ($locale == 'en') {\n            $spacetag = new Space_tag();\n        } elseif ($locale == 'de') {\n            $spacetag = new Space_tag_de();\n        } else {\n            $spacetag = new Space_tag();\n        }\n        //check if the tag already exists\n        $stag = Space_tag::where('name', $request->name)->first();\n        if ($stag) {\n            return 'exists';\n        } else {\n            $spacetag->name = $request->name;\n            $spacetag->personal = 1;\n            $spacetag->save();\n            return $request->name;\n        }\n    }\n\n    public function place(Request $request)\n    {\n        $type = strtolower($request->type);\n        $placeid = $request->id;\n        if ($request->type == 'street') {\n            $data = Street::find($request->id);\n            return view('place', compact('data', 'type', 'placeid'));\n        }\n        if ($request->type == 'building') {\n            $data = Building::find($request->id);\n            return view('place', compact('data', 'type', 'placeid'));\n        }\n        if ($request->type == 'openspace') {\n            $data = Openspace::find($request->id);\n            return view('place', compact('data', 'type', 'placeid'));\n        }\n    }\n\n    public function delete(Request $request)\n    {\n        if ($request->type == 'Street') {\n            $data = Street::find($request->id);\n            $data->delete();\n            return redirect('/dashboard');\n        }\n        if ($request->type == 'Building') {\n            $data = Building::find($request->id);\n            $data->delete();\n            return redirect('/dashboard');\n        }\n        if ($request->type == 'Openspace') {\n            $data = Openspace::find($request->id);\n            $data->delete();\n            return redirect('/dashboard');\n        }\n    }\n\n    static function pages()\n    {\n        $pages = Pages::all();\n        return $pages;\n    }\n\n    static function allusers()\n    {\n        $users = User::all();\n        return $users;\n    }\n\n    static function infosperso()\n    {\n        $infos = Infosperso::all();\n        return $infos;\n    }\n\n    static function myprofile()\n    {\n        $userid = backpack_auth()->user()->id;\n        $infos = Infosperso::where('user_id', $userid)->first();\n        return $infos;\n    }\n\n    public function details(Request $request)\n    {\n        $type = strtolower($request->type);\n        $placeid = $request->id;\n        if ($type == 'street') {\n            $data = Street::find($request->id);\n            return view('details', compact('data', 'type', 'placeid'));\n        }\n        if ($type == 'building') {\n            $data = Building::find($request->id);\n            return view('details', compact('data', 'type', 'placeid'));\n        }\n        if ($type == 'openspace') {\n            $data = Openspace::find($request->id);\n            return view('details', compact('data', 'type', 'placeid'));\n        }\n    }\n\n    public function edit(Request $request)\n    {\n        //dd($request->all());\n        $street = Street::all();\n        $building = Building::all();\n        $openspace = Openspace::all();\n\n        $all_data = array_merge(\n            $street->toArray(),\n            $building->toArray(),\n            $openspace->toArray()\n        );\n\n        if ($request->type == 'street') {\n            Street::where('id', $request->placeid)->update([\n                'description' => $request->description,\n                'change' => $request->change,\n                'description2' => $request->description2,\n                'confort' => $request->confort,\n                'rest' => $request->rest,\n                'rest_text' => $request->rest_text,\n                'movement' => $request->movement,\n                'movement_text' => $request->movement_text,\n                'activities' => $request->activities,\n                'activities_text' => $request->activities_text,\n                'orientation' => $request->orientation,\n                'orientation_text' => $request->orientation_text,\n                'weather' => $request->weather,\n                'weather_text' => $request->weather_text,\n                'facilities' => $request->facilities,\n                'facilities_text' => $request->facilities_text,\n                'noise' => $request->noise,\n                'noise_text' => $request->noise_text,\n                'enjoyable' => $request->enjoyable,\n                'cleanliness' => $request->cleanliness,\n                'cleanliness_text' => $request->cleanliness_text,\n                'plants' => $request->plants,\n                'plants_text' => $request->plants_text,\n                'sunlight' => $request->sunlight,\n                'sunlight_text' => $request->sunlight_text,\n                'shade' => $request->shade,\n                'shade_text' => $request->shade_text,\n                'talking' => $request->talking,\n                'talking_text' => $request->talking_text,\n                'interesting' => $request->interesting,\n                'interesting_text' => $request->interesting_text,\n                'beauty' => $request->beauty,\n                'beauty_text' => $request->beauty_text,\n                'protected' => $request->protected,\n                'protection' => $request->protection,\n                'protection_text' => $request->protection_text,\n                'polluants' => $request->polluants,\n                'polluants_text' => $request->polluants_text,\n                'night' => $request->night,\n                'night_text' => $request->night_text,\n                'hazards' => $request->hazards,\n                'dangerous' => $request->dangerous,\n                'dangerous_text' => $request->dangerous_text,\n                'protection_harm' => $request->protection_harm,\n                'protection_harm_text' => $request->protection_harm_text,\n                'spaceusage' => $request->spaceusage,\n                'spend_time' => $request->spend_time,\n                'spend_time_text' => $request->spend_time_text,\n                'meeting' => $request->meeting,\n                'meeting_text' => $request->meeting_text,\n                'multifunctional' => $request->multifonctional,\n                'multifunctional_text' => $request->multifonctional_text,\n                'events' => $request->events,\n                'events_text' => $request->events_text,\n            ]);\n        }\n        if ($request->type == 'building') {\n            Building::where('id', $request->placeid)->update([\n                'description' => $request->description,\n                'change' => $request->change,\n                'description2' => $request->description2,\n                'confort' => $request->confort,\n                'rest' => $request->rest,\n                'rest_text' => $request->rest_text,\n                'movement' => $request->movement,\n                'movement_text' => $request->movement_text,\n                'activities' => $request->activities,\n                'activities_text' => $request->activities_text,\n                'orientation' => $request->orientation,\n                'orientation_text' => $request->orientation_text,\n                'weather' => $request->weather,\n                'weather_text' => $request->weather_text,\n                'facilities' => $request->facilities,\n                'facilities_text' => $request->facilities_text,\n                'noise' => $request->noise,\n                'noise_text' => $request->noise_text,\n                'enjoyable' => $request->enjoyable,\n                'cleanliness' => $request->cleanliness,\n                'cleanliness_text' => $request->cleanliness_text,\n                'plants' => $request->plants,\n                'plants_text' => $request->plants_text,\n                'sunlight' => $request->sunlight,\n                'sunlight_text' => $request->sunlight_text,\n                'shade' => $request->shade,\n                'shade_text' => $request->shade_text,\n                'talking' => $request->talking,\n                'talking_text' => $request->talking_text,\n                'interesting' => $request->interesting,\n                'interesting_text' => $request->interesting_text,\n                'beauty' => $request->beauty,\n                'beauty_text' => $request->beauty_text,\n                'protected' => $request->protected,\n                'protection' => $request->protection,\n                'protection_text' => $request->protection_text,\n                'polluants' => $request->polluants,\n                'polluants_text' => $request->polluants_text,\n                'night' => $request->night,\n                'night_text' => $request->night_text,\n                'hazards' => $request->hazards,\n                'dangerous' => $request->dangerous,\n                'dangerous_text' => $request->dangerous_text,\n                'protection_harm' => $request->protection_harm,\n                'protection_harm_text' => $request->protection_harm_text,\n                'spaceusage' => $request->spaceusage,\n                'spend_time' => $request->spend_time,\n                'spend_time_text' => $request->spend_time_text,\n                'meeting' => $request->meeting,\n                'meeting_text' => $request->meeting_text,\n                'multifunctional' => $request->multifonctional,\n                'multifunctional_text' => $request->multifonctional_text,\n                'events' => $request->events,\n                'events_text' => $request->events_text,\n            ]);\n        }\n        if ($request->type == 'openspace') {\n            Openspace::where('id', $request->placeid)->update([\n                'description' => $request->description,\n                'change' => $request->change,\n                'description2' => $request->description2,\n                'confort' => $request->confort,\n                'rest' => $request->rest,\n                'rest_text' => $request->rest_text,\n                'movement' => $request->movement,\n                'movement_text' => $request->movement_text,\n                'activities' => $request->activities,\n                'activities_text' => $request->activities_text,\n                'orientation' => $request->orientation,\n                'orientation_text' => $request->orientation_text,\n                'weather' => $request->weather,\n                'weather_text' => $request->weather_text,\n                'facilities' => $request->facilities,\n                'facilities_text' => $request->facilities_text,\n                'noise' => $request->noise,\n                'noise_text' => $request->noise_text,\n                'enjoyable' => $request->enjoyable,\n                'cleanliness' => $request->cleanliness,\n                'cleanliness_text' => $request->cleanliness_text,\n                'plants' => $request->plants,\n                'plants_text' => $request->plants_text,\n                'sunlight' => $request->sunlight,\n                'sunlight_text' => $request->sunlight_text,\n                'shade' => $request->shade,\n                'shade_text' => $request->shade_text,\n                'talking' => $request->talking,\n                'talking_text' => $request->talking_text,\n                'interesting' => $request->interesting,\n                'interesting_text' => $request->interesting_text,\n                'beauty' => $request->beauty,\n                'beauty_text' => $request->beauty_text,\n                'protected' => $request->protected,\n                'protection' => $request->protection,\n                'protection_text' => $request->protection_text,\n                'polluants' => $request->polluants,\n                'polluants_text' => $request->polluants_text,\n                'night' => $request->night,\n                'night_text' => $request->night_text,\n                'hazards' => $request->hazards,\n                'dangerous' => $request->dangerous,\n                'dangerous_text' => $request->dangerous_text,\n                'protection_harm' => $request->protection_harm,\n                'protection_harm_text' => $request->protection_harm_text,\n                'spaceusage' => $request->spaceusage,\n                'spend_time' => $request->spend_time,\n                'spend_time_text' => $request->spend_time_text,\n                'meeting' => $request->meeting,\n                'meeting_text' => $request->meeting_text,\n                'multifunctional' => $request->multifonctional,\n                'multifunctional_text' => $request->multifonctional_text,\n                'events' => $request->events,\n                'events_text' => $request->events_text,\n            ]);\n        }\n\n        return redirect()->route('dashboard');\n    }\n}\n"
        }
    ]
}