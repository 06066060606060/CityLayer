{
    "sourceFile": "app/Http/Controllers/Admin/StatCrudController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1697836165560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1697836173339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,8 @@\n         CRUD::column('street_id')->label('Street ID');\n         CRUD::column('openspace_id')->label('Openspace ID');\n         CRUD::column('building_id')->label('Building ID');\n         CRUD::column('likes');\n-        CRUD::column('likes2');\n         CRUD::column('dislikes');\n         CRUD::column('stars');\n         CRUD::column('bof');\n         CRUD::column('weird');\n"
                },
                {
                    "date": 1697836179846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,99 +0,0 @@\n-<?php\n-\n-namespace App\\Http\\Controllers\\Admin;\n-\n-use App\\Http\\Requests\\StatRequest;\n-use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n-use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n-use PhpParser\\Node\\Stmt\\Label;\n-\n-/**\n- * Class StatCrudController\n- * @package App\\Http\\Controllers\\Admin\n- * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n- */\n-class StatCrudController extends CrudController\n-{\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n-    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n-    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n-   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n-   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n-\n-    /**\n-     * Configure the CrudPanel object. Apply settings to all operations.\n-     * \n-     * @return void\n-     */\n-    public function setup()\n-    {\n-        CRUD::setModel(\\App\\Models\\Stat::class);\n-        CRUD::setRoute(config('backpack.base.route_prefix') . '/stat');\n-        CRUD::setEntityNameStrings('stat', 'stats');\n-    }\n-\n-    /**\n-     * Define what happens when the List operation is loaded.\n-     * \n-     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n-     * @return void\n-     */\n-    protected function setupListOperation()\n-    {\n-        CRUD::column('user_id');\n-        CRUD::column('street_id')->label('Street ID');\n-        CRUD::column('openspace_id')->label('Openspace ID');\n-        CRUD::column('building_id')->label('Building ID');\n-        CRUD::column('likes');\n-        CRUD::column('dislikes');\n-        CRUD::column('stars');\n-        CRUD::column('bof');\n-        CRUD::column('weird');\n-\n-\n-        /**\n-         * Columns can be defined using the fluent syntax or array syntax:\n-         * - CRUD::column('price')->type('number');\n-         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n-         */\n-    }\n-\n-    /**\n-     * Define what happens when the Create operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-create\n-     * @return void\n-     */\n-    protected function setupCreateOperation()\n-    {\n-        CRUD::setValidation(StatRequest::class);\n-\n-        CRUD::field('user_id');\n-        CRUD::field('street_id');\n-        CRUD::field('openspace_id');\n-        CRUD::field('building_id');\n-        CRUD::field('likes');\n-        CRUD::field('dislikes');\n-        CRUD::field('stars');\n-        CRUD::field('bof');\n-        CRUD::field('weird');\n-\n-\n-        /**\n-         * Fields can be defined using the fluent syntax or array syntax:\n-         * - CRUD::field('price')->type('number');\n-         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n-         */\n-    }\n-\n-    /**\n-     * Define what happens when the Update operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-update\n-     * @return void\n-     */\n-    protected function setupUpdateOperation()\n-    {\n-        $this->setupCreateOperation();\n-    }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1697836187641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,95 @@\n+<?php\n \n+namespace App\\Http\\Controllers\\Admin;\n+\n+use App\\Http\\Requests\\StatRequest;\n+use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n+use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n+use PhpParser\\Node\\Stmt\\Label;\n+\n+/**\n+ * Class StatCrudController\n+ * @package App\\Http\\Controllers\\Admin\n+ * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n+ */\n+class StatCrudController extends CrudController\n+{\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n+    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n+    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n+   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n+   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n+\n+    /**\n+     * Configure the CrudPanel object. Apply settings to all operations.\n+     * \n+     * @return void\n+     */\n+    public function setup()\n+    {\n+        CRUD::setModel(\\App\\Models\\Stat::class);\n+        CRUD::setRoute(config('backpack.base.route_prefix') . '/stat');\n+        CRUD::setEntityNameStrings('stat', 'stats');\n+    }\n+\n+    /**\n+     * Define what happens when the List operation is loaded.\n+     * \n+     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n+     * @return void\n+     */\n+    protected function setupListOperation()\n+    {\n+        CRUD::column('user_id');\n+        CRUD::column('street_id')->label('Street ID');\n+        CRUD::column('openspace_id')->label('Openspace ID');\n+        CRUD::column('building_id')->label('Building ID');\n+\n+\n+\n+        /**\n+         * Columns can be defined using the fluent syntax or array syntax:\n+         * - CRUD::column('price')->type('number');\n+         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n+         */\n+    }\n+\n+    /**\n+     * Define what happens when the Create operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-create\n+     * @return void\n+     */\n+    protected function setupCreateOperation()\n+    {\n+        CRUD::setValidation(StatRequest::class);\n+\n+        CRUD::field('user_id');\n+        CRUD::field('street_id');\n+        CRUD::field('openspace_id');\n+        CRUD::field('building_id');\n+        CRUD::field('likes');\n+        CRUD::field('dislikes');\n+        CRUD::field('stars');\n+        CRUD::field('bof');\n+        CRUD::field('weird');\n+\n+\n+        /**\n+         * Fields can be defined using the fluent syntax or array syntax:\n+         * - CRUD::field('price')->type('number');\n+         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n+         */\n+    }\n+\n+    /**\n+     * Define what happens when the Update operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-update\n+     * @return void\n+     */\n+    protected function setupUpdateOperation()\n+    {\n+        $this->setupCreateOperation();\n+    }\n+}\n"
                },
                {
                    "date": 1697836195158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,15 @@\n         CRUD::column('user_id');\n         CRUD::column('street_id')->label('Street ID');\n         CRUD::column('openspace_id')->label('Openspace ID');\n         CRUD::column('building_id')->label('Building ID');\n+        CRUD::column('likes');\n+        CRUD::column('dislikes');\n+        CRUD::column('stars');\n+        CRUD::column('bof');\n+        CRUD::column('weird');\n \n \n-\n         /**\n          * Columns can be defined using the fluent syntax or array syntax:\n          * - CRUD::column('price')->type('number');\n          * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n"
                },
                {
                    "date": 1697836200986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,16 +70,11 @@\n \n         CRUD::field('user_id');\n         CRUD::field('street_id');\n         CRUD::field('openspace_id');\n-        CRUD::field('building_id');\n-        CRUD::field('likes');\n-        CRUD::field('dislikes');\n-        CRUD::field('stars');\n-        CRUD::field('bof');\n-        CRUD::field('weird');\n \n \n+\n         /**\n          * Fields can be defined using the fluent syntax or array syntax:\n          * - CRUD::field('price')->type('number');\n          * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n"
                },
                {
                    "date": 1697836208045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,11 +70,16 @@\n \n         CRUD::field('user_id');\n         CRUD::field('street_id');\n         CRUD::field('openspace_id');\n+        CRUD::field('building_id');\n+        CRUD::field('likes');\n+        CRUD::field('dislikes');\n+        CRUD::field('stars');\n+        CRUD::field('bof');\n+        CRUD::field('weird');\n \n \n-\n         /**\n          * Fields can be defined using the fluent syntax or array syntax:\n          * - CRUD::field('price')->type('number');\n          * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n"
                }
            ],
            "date": 1697836165560,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Requests\\StatRequest;\nuse Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\nuse Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\nuse PhpParser\\Node\\Stmt\\Label;\n\n/**\n * Class StatCrudController\n * @package App\\Http\\Controllers\\Admin\n * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n */\nclass StatCrudController extends CrudController\n{\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n    //use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n   // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n\n    /**\n     * Configure the CrudPanel object. Apply settings to all operations.\n     * \n     * @return void\n     */\n    public function setup()\n    {\n        CRUD::setModel(\\App\\Models\\Stat::class);\n        CRUD::setRoute(config('backpack.base.route_prefix') . '/stat');\n        CRUD::setEntityNameStrings('stat', 'stats');\n    }\n\n    /**\n     * Define what happens when the List operation is loaded.\n     * \n     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n     * @return void\n     */\n    protected function setupListOperation()\n    {\n        CRUD::column('user_id');\n        CRUD::column('street_id')->label('Street ID');\n        CRUD::column('openspace_id')->label('Openspace ID');\n        CRUD::column('building_id')->label('Building ID');\n        CRUD::column('likes');\n        CRUD::column('likes2');\n        CRUD::column('dislikes');\n        CRUD::column('stars');\n        CRUD::column('bof');\n        CRUD::column('weird');\n\n\n        /**\n         * Columns can be defined using the fluent syntax or array syntax:\n         * - CRUD::column('price')->type('number');\n         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n         */\n    }\n\n    /**\n     * Define what happens when the Create operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-create\n     * @return void\n     */\n    protected function setupCreateOperation()\n    {\n        CRUD::setValidation(StatRequest::class);\n\n        CRUD::field('user_id');\n        CRUD::field('street_id');\n        CRUD::field('openspace_id');\n        CRUD::field('building_id');\n        CRUD::field('likes');\n        CRUD::field('dislikes');\n        CRUD::field('stars');\n        CRUD::field('bof');\n        CRUD::field('weird');\n\n\n        /**\n         * Fields can be defined using the fluent syntax or array syntax:\n         * - CRUD::field('price')->type('number');\n         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n         */\n    }\n\n    /**\n     * Define what happens when the Update operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-update\n     * @return void\n     */\n    protected function setupUpdateOperation()\n    {\n        $this->setupCreateOperation();\n    }\n}\n"
        }
    ]
}