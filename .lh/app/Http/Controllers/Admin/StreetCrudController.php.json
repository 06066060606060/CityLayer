{
    "sourceFile": "app/Http/Controllers/Admin/StreetCrudController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1705944811458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705944823402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,14 +116,14 @@\n \n         CRUD::column('description')->label('Feedback Comments');\n        \n         \n-        $this->crud->removeAllButtons();\n+        // $this->crud->removeAllButtons();\n \n \n        \n       \n-        $this->crud->enableExportButtons();\n+        // $this->crud->enableExportButtons();\n \n     }\n \n     /**\n"
                },
                {
                    "date": 1705944837757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,61 +61,61 @@\n        \n         \n \n \n-        $this->crud->addColumn([ \n-            'label' => \"Place\", \n-            'type' => \"model_function\",\n-            'limit' => 200,\n-            'function_name' => 'getPlaceString',\n-            'escaped' => false\n-        ]);\n+        // $this->crud->addColumn([ \n+        //     'label' => \"Place\", \n+        //     'type' => \"model_function\",\n+        //     'limit' => 200,\n+        //     'function_name' => 'getPlaceString',\n+        //     'escaped' => false\n+        // ]);\n \n       \n \n-        $this->crud->addColumn([ \n-            'label' => \"Observation\", \n-            'type' => \"model_function\",\n-            'limit' => 99999,\n-            'function_name' => 'getObservationString',\n-            'escaped' => false\n-        ]);\n+        // $this->crud->addColumn([ \n+        //     'label' => \"Observation\", \n+        //     'type' => \"model_function\",\n+        //     'limit' => 99999,\n+        //     'function_name' => 'getObservationString',\n+        //     'escaped' => false\n+        // ]);\n \n        \n \n-        $this->crud->addColumn([\n-            'label' => 'Place Image URL',\n-            'type' => 'text',\n-            'name' => 'place_image',\n-            'prefix' => asset('storage/uploads/place').'/',\n+        // $this->crud->addColumn([\n+        //     'label' => 'Place Image URL',\n+        //     'type' => 'text',\n+        //     'name' => 'place_image',\n+        //     'prefix' => asset('storage/uploads/place').'/',\n \n-        ]);\n+        // ]);\n \n-        $this->crud->addColumn([\n-            'label' => 'Observation Image URL',\n-            'type' => 'text',\n-            'name' => 'obsevation_image',\n-            'prefix' => asset('storage/uploads/observation').'/',\n+        // $this->crud->addColumn([\n+        //     'label' => 'Observation Image URL',\n+        //     'type' => 'text',\n+        //     'name' => 'obsevation_image',\n+        //     'prefix' => asset('storage/uploads/observation').'/',\n \n-        ]);\n+        // ]);\n \n-        CRUD::column('place_description')->label('Place Comment');\n-        CRUD::column('obsevation_description')->label('Observation Comment');\n+        // CRUD::column('place_description')->label('Place Comment');\n+        // CRUD::column('obsevation_description')->label('Observation Comment');\n \n \n-        CRUD::addColumn([\n-            'name' => 'TotalLikes',\n-            'label' => 'Total Likes',\n-            'type' => 'text',\n-        ]);\n+        // CRUD::addColumn([\n+        //     'name' => 'TotalLikes',\n+        //     'label' => 'Total Likes',\n+        //     'type' => 'text',\n+        // ]);\n         \n-        CRUD::addColumn([\n-            'name' => 'ListplaceComments',\n-            'label' => 'User Comments',\n-            'type' => 'text',\n-        ]);\n+        // CRUD::addColumn([\n+        //     'name' => 'ListplaceComments',\n+        //     'label' => 'User Comments',\n+        //     'type' => 'text',\n+        // ]);\n \n-        CRUD::column('description')->label('Feedback Comments');\n+        // CRUD::column('description')->label('Feedback Comments');\n        \n         \n         // $this->crud->removeAllButtons();\n \n"
                },
                {
                    "date": 1705944878360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,602 @@\n+<?php\n+\n+namespace App\\Http\\Controllers\\Admin;\n+\n+use App\\Http\\Requests\\StreetRequest;\n+use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n+use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n+\n+/**\n+ * Class StreetCrudController\n+ * @package App\\Http\\Controllers\\Admin\n+ * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n+ */\n+class StreetCrudController extends CrudController\n+{\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n+  //  use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n+    use \\App\\Http\\Controllers\\Admin\\Operations\\ExportStreetOperation;\n+\n+    /**\n+     * Configure the CrudPanel object. Apply settings to all operations.\n+     * \n+     * @return void\n+     */\n+    public function setup()\n+    {\n+        CRUD::setModel(\\App\\Models\\PlaceDetails::class);\n+        CRUD::setRoute(config('backpack.base.route_prefix') . '/place');\n+        CRUD::setEntityNameStrings('place', 'places');\n+    }\n+\n+    function getFieldsData()\n+    {\n+        $this->crud->addColumn([\n+            'name' => 'image0',\n+            'label' => 'Image Feeling',\n+            'type' => 'image',\n+            'prefix' => 'storage/',\n+            'height' => '80px',\n+            'width' => 'auto',\n+\n+        ]);\n+\n+    }\n+    /**\n+     * Define what happens when the List operation is loaded.\n+     * \n+     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n+     * @return void\n+     */\n+    protected function setupListOperation()\n+    {\n+        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n+        CRUD::column('id')->label('Mapping ID');\n+        CRUD::column('user_id');\n+        CRUD::column('latitude');\n+        CRUD::column('longitude');\n+       \n+        \n+\n+\n+        $this->crud->addColumn([ \n+            'label' => \"Place\", \n+            'type' => \"model_function\",\n+            'limit' => 200,\n+            'function_name' => 'getPlaceString',\n+            'escaped' => false\n+        ]);\n+\n+      \n+\n+        $this->crud->addColumn([ \n+            'label' => \"Observation\", \n+            'type' => \"model_function\",\n+            'limit' => 99999,\n+            'function_name' => 'getObservationString',\n+            'escaped' => false\n+        ]);\n+\n+       \n+\n+        $this->crud->addColumn([\n+            'label' => 'Place Image URL',\n+            'type' => 'text',\n+            'name' => 'place_image',\n+            'prefix' => asset('storage/uploads/place').'/',\n+\n+        ]);\n+\n+        $this->crud->addColumn([\n+            'label' => 'Observation Image URL',\n+            'type' => 'text',\n+            'name' => 'obsevation_image',\n+            'prefix' => asset('storage/uploads/observation').'/',\n+\n+        ]);\n+\n+        CRUD::column('place_description')->label('Place Comment');\n+        CRUD::column('obsevation_description')->label('Observation Comment');\n+\n+\n+        CRUD::addColumn([\n+            'name' => 'TotalLikes',\n+            'label' => 'Total Likes',\n+            'type' => 'text',\n+        ]);\n+        \n+        CRUD::addColumn([\n+            'name' => 'ListplaceComments',\n+            'label' => 'User Comments',\n+            'type' => 'text',\n+        ]);\n+\n+        CRUD::column('description')->label('Feedback Comments');\n+       \n+        \n+        // $this->crud->removeAllButtons();\n+\n+\n+       \n+      \n+        // $this->crud->enableExportButtons();\n+\n+    }\n+\n+    /**\n+     * Define what happens when the Create operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-create\n+     * @return void\n+     */\n+    protected function setupCreateOperation()\n+    {\n+        CRUD::setValidation(StreetRequest::class);\n+        CRUD::field('user_id')->tab('Page 1')->wrapper(['class' => 'form-group col-md']);\n+        CRUD::addField([ // Text\n+            'name'  => 'name',\n+            'label' => 'Identifier',\n+            'type'  => 'text',\n+            'tab'             => 'Page 1',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]);\n+        CRUD::addField([ // Text\n+            'name'  => 'longitude',\n+            'label' => 'Longitude',\n+            'type'  => 'text',\n+            'tab'             => 'Page 1',\n+            'wrapper' => [ 'class' => 'form-group1 col-md pl-3'],\n+        ]);\n+        CRUD::addField([ // Text\n+            'name'  => 'latitude',\n+            'label' => 'Latitude',\n+            'type'  => 'text',\n+            'tab'             => 'Page 1',\n+            'wrapper' => [ 'class' => 'form-group1 col-md pl-3'],\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'feeling',\n+            'label' => 'Feeling',\n+            'type'  => 'text',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'description',\n+            'label' => 'Why this feeling',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'change',\n+            'label' => 'Change level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'description2',\n+            'label' => 'What would you change',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'confort',\n+            'label' => 'How comfortable',\n+            'type'  => 'number',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'rest',\n+            'label' => 'place to rest level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'rest_text',\n+            'label' => 'place to rest text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 1',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'movement',\n+            'label' => 'walk, roll, bike comfort level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'movement_text',\n+            'label' => 'walk, roll, bike comfort text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'activities',\n+            'label' => 'play, exercice, activities level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'activities_text',\n+            'label' => 'play, exercice, activities text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'orientation',\n+            'label' => 'visibility & orientation level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'orientation_text',\n+            'label' => 'visibility & orientation text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'weather',\n+            'label' => 'rain & wind protection level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'weather_text',\n+            'label' => 'rain & wind protection text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'facilities',\n+            'label' => 'facilities level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'facilities_text',\n+            'label' => 'facilities text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        \n+        CRUD::addField([ // Text\n+            'name'  => 'enjoyable',\n+            'label' => 'How enjoyable is this space',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'noise',\n+            'label' => 'noise level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'noise_text',\n+            'label' => 'noise text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 2',\n+        ]);\n+\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'beauty',\n+            'label' => 'beauty level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'beauty_text',\n+            'label' => 'beauty text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'cleanliness',\n+            'label' => 'cleanliness level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'cleanliness_text',\n+            'label' => 'cleanliness text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'plants',\n+            'label' => 'plants & trees level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'plants_text',\n+            'label' => 'plants & trees text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'talking',\n+            'label' => 'talking & listening level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'talking_text',\n+            'label' => 'talking & listening text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'sunlight',\n+            'label' => 'sunlight level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'sunlight_text',\n+            'label' => 'sunlight text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'shade',\n+            'label' => 'shade level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'shade_text',\n+            'label' => 'shade text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'interesting',\n+            'label' => 'interesting sights level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'interesting_text',\n+            'label' => 'interesting sights text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 3',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'protection',\n+            'label' => 'protection level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'protection_text',\n+            'label' => 'protection text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'polluants',\n+            'label' => 'polluants level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'polluants_text',\n+            'label' => 'polluants text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'night',\n+            'label' => 'night light level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'night_text',\n+            'label' => 'night light text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'hazards',\n+            'label' => 'other hazards',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'dangerous',\n+            'label' => 'dangerous objects level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'dangerous_text',\n+            'label' => 'dangerous objects text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'protection_harm',\n+            'label' => 'safety from harm level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'protection_harm_text',\n+            'label' => 'safety from harm text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'spaceusage',\n+            'label' => 'how the space is used level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'spend_time',\n+            'label' => 'fun to spend time level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'time_spending',\n+            'label' => 'fun to spend time  text',\n+            'type'  => 'text',\n+            'tab'   => 'Page 4',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'meeting',\n+            'label' => 'meeting with friend level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'meeting_text',\n+            'label' => 'meeting with friend  text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'events',\n+            'label' => 'events level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'events_text',\n+            'label' => 'events text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'multifunctional',\n+            'label' => 'multifunctional level',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'multifunctional_text',\n+            'label' => 'multifunctional text',\n+            'type'  => 'textarea',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'usagedetail',\n+            'label' => 'who use this space',\n+            'type'  => 'text',\n+            'tab'   => 'Page 5',\n+        ]);\n+\n+\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'likes',\n+            'label' => 'likes number',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]);\n+\n+        CRUD::addField([ // Text\n+            'name'  => 'dislikes',\n+            'label' => 'dislikes number',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]); \n+\n+        CRUD::addField([ // Text\n+            'name'  => 'stars',\n+            'label' => 'pleasant number',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]); \n+\n+        CRUD::addField([ // Text\n+            'name'  => 'bof',\n+            'label' => 'indifferent number',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]); \n+\n+        CRUD::addField([ // Text\n+            'name'  => 'weird',\n+            'label' => 'worried number',\n+            'type'  => 'number',\n+            'tab'   => 'Page 5',\n+            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n+        ]); \n+\n+    }\n+\n+    /**\n+     * Define what happens when the Update operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-update\n+     * @return void\n+     */\n+    protected function setupUpdateOperation()\n+    {\n+        $this->setupCreateOperation();\n+    }\n+}\n"
                }
            ],
            "date": 1705944811458,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Requests\\StreetRequest;\nuse Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\nuse Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n\n/**\n * Class StreetCrudController\n * @package App\\Http\\Controllers\\Admin\n * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n */\nclass StreetCrudController extends CrudController\n{\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n  //  use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n    use \\App\\Http\\Controllers\\Admin\\Operations\\ExportStreetOperation;\n\n    /**\n     * Configure the CrudPanel object. Apply settings to all operations.\n     * \n     * @return void\n     */\n    public function setup()\n    {\n        CRUD::setModel(\\App\\Models\\PlaceDetails::class);\n        CRUD::setRoute(config('backpack.base.route_prefix') . '/place');\n        CRUD::setEntityNameStrings('place', 'places');\n    }\n\n    function getFieldsData()\n    {\n        $this->crud->addColumn([\n            'name' => 'image0',\n            'label' => 'Image Feeling',\n            'type' => 'image',\n            'prefix' => 'storage/',\n            'height' => '80px',\n            'width' => 'auto',\n\n        ]);\n\n    }\n    /**\n     * Define what happens when the List operation is loaded.\n     * \n     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n     * @return void\n     */\n    protected function setupListOperation()\n    {\n        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n        CRUD::column('id')->label('Mapping ID');\n        CRUD::column('user_id');\n        CRUD::column('latitude');\n        CRUD::column('longitude');\n       \n        \ndie();\n\n        $this->crud->addColumn([ \n            'label' => \"Place\", \n            'type' => \"model_function\",\n            'limit' => 200,\n            'function_name' => 'getPlaceString',\n            'escaped' => false\n        ]);\n\n      \n\n        $this->crud->addColumn([ \n            'label' => \"Observation\", \n            'type' => \"model_function\",\n            'limit' => 99999,\n            'function_name' => 'getObservationString',\n            'escaped' => false\n        ]);\n\n       \n\n        $this->crud->addColumn([\n            'label' => 'Place Image URL',\n            'type' => 'text',\n            'name' => 'place_image',\n            'prefix' => asset('storage/uploads/place').'/',\n\n        ]);\n\n        $this->crud->addColumn([\n            'label' => 'Observation Image URL',\n            'type' => 'text',\n            'name' => 'obsevation_image',\n            'prefix' => asset('storage/uploads/observation').'/',\n\n        ]);\n\n        CRUD::column('place_description')->label('Place Comment');\n        CRUD::column('obsevation_description')->label('Observation Comment');\n\n\n        CRUD::addColumn([\n            'name' => 'TotalLikes',\n            'label' => 'Total Likes',\n            'type' => 'text',\n        ]);\n        \n        CRUD::addColumn([\n            'name' => 'ListplaceComments',\n            'label' => 'User Comments',\n            'type' => 'text',\n        ]);\n\n        CRUD::column('description')->label('Feedback Comments');\n       \n        \n        $this->crud->removeAllButtons();\n\n\n       \n      \n        $this->crud->enableExportButtons();\n\n    }\n\n    /**\n     * Define what happens when the Create operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-create\n     * @return void\n     */\n    protected function setupCreateOperation()\n    {\n        CRUD::setValidation(StreetRequest::class);\n        CRUD::field('user_id')->tab('Page 1')->wrapper(['class' => 'form-group col-md']);\n        CRUD::addField([ // Text\n            'name'  => 'name',\n            'label' => 'Identifier',\n            'type'  => 'text',\n            'tab'             => 'Page 1',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]);\n        CRUD::addField([ // Text\n            'name'  => 'longitude',\n            'label' => 'Longitude',\n            'type'  => 'text',\n            'tab'             => 'Page 1',\n            'wrapper' => [ 'class' => 'form-group1 col-md pl-3'],\n        ]);\n        CRUD::addField([ // Text\n            'name'  => 'latitude',\n            'label' => 'Latitude',\n            'type'  => 'text',\n            'tab'             => 'Page 1',\n            'wrapper' => [ 'class' => 'form-group1 col-md pl-3'],\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'feeling',\n            'label' => 'Feeling',\n            'type'  => 'text',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'description',\n            'label' => 'Why this feeling',\n            'type'  => 'textarea',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'change',\n            'label' => 'Change level',\n            'type'  => 'number',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'description2',\n            'label' => 'What would you change',\n            'type'  => 'textarea',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'confort',\n            'label' => 'How comfortable',\n            'type'  => 'number',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'rest',\n            'label' => 'place to rest level',\n            'type'  => 'number',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'rest_text',\n            'label' => 'place to rest text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 1',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'movement',\n            'label' => 'walk, roll, bike comfort level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'movement_text',\n            'label' => 'walk, roll, bike comfort text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'activities',\n            'label' => 'play, exercice, activities level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'activities_text',\n            'label' => 'play, exercice, activities text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'orientation',\n            'label' => 'visibility & orientation level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'orientation_text',\n            'label' => 'visibility & orientation text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'weather',\n            'label' => 'rain & wind protection level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'weather_text',\n            'label' => 'rain & wind protection text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'facilities',\n            'label' => 'facilities level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'facilities_text',\n            'label' => 'facilities text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n        \n        CRUD::addField([ // Text\n            'name'  => 'enjoyable',\n            'label' => 'How enjoyable is this space',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'noise',\n            'label' => 'noise level',\n            'type'  => 'number',\n            'tab'   => 'Page 2',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'noise_text',\n            'label' => 'noise text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 2',\n        ]);\n\n\n        CRUD::addField([ // Text\n            'name'  => 'beauty',\n            'label' => 'beauty level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'beauty_text',\n            'label' => 'beauty text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'cleanliness',\n            'label' => 'cleanliness level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'cleanliness_text',\n            'label' => 'cleanliness text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'plants',\n            'label' => 'plants & trees level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'plants_text',\n            'label' => 'plants & trees text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'talking',\n            'label' => 'talking & listening level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'talking_text',\n            'label' => 'talking & listening text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'sunlight',\n            'label' => 'sunlight level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'sunlight_text',\n            'label' => 'sunlight text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'shade',\n            'label' => 'shade level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'shade_text',\n            'label' => 'shade text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'interesting',\n            'label' => 'interesting sights level',\n            'type'  => 'number',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'interesting_text',\n            'label' => 'interesting sights text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 3',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'protection',\n            'label' => 'protection level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'protection_text',\n            'label' => 'protection text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'polluants',\n            'label' => 'polluants level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'polluants_text',\n            'label' => 'polluants text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'night',\n            'label' => 'night light level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'night_text',\n            'label' => 'night light text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'hazards',\n            'label' => 'other hazards',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'dangerous',\n            'label' => 'dangerous objects level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'dangerous_text',\n            'label' => 'dangerous objects text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'protection_harm',\n            'label' => 'safety from harm level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'protection_harm_text',\n            'label' => 'safety from harm text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'spaceusage',\n            'label' => 'how the space is used level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'spend_time',\n            'label' => 'fun to spend time level',\n            'type'  => 'number',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'time_spending',\n            'label' => 'fun to spend time  text',\n            'type'  => 'text',\n            'tab'   => 'Page 4',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'meeting',\n            'label' => 'meeting with friend level',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'meeting_text',\n            'label' => 'meeting with friend  text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'events',\n            'label' => 'events level',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'events_text',\n            'label' => 'events text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'multifunctional',\n            'label' => 'multifunctional level',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'multifunctional_text',\n            'label' => 'multifunctional text',\n            'type'  => 'textarea',\n            'tab'   => 'Page 5',\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'usagedetail',\n            'label' => 'who use this space',\n            'type'  => 'text',\n            'tab'   => 'Page 5',\n        ]);\n\n\n\n        CRUD::addField([ // Text\n            'name'  => 'likes',\n            'label' => 'likes number',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]);\n\n        CRUD::addField([ // Text\n            'name'  => 'dislikes',\n            'label' => 'dislikes number',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]); \n\n        CRUD::addField([ // Text\n            'name'  => 'stars',\n            'label' => 'pleasant number',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]); \n\n        CRUD::addField([ // Text\n            'name'  => 'bof',\n            'label' => 'indifferent number',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]); \n\n        CRUD::addField([ // Text\n            'name'  => 'weird',\n            'label' => 'worried number',\n            'type'  => 'number',\n            'tab'   => 'Page 5',\n            'wrapper' => [ 'class' => 'form-group col-md pl-3'],\n        ]); \n\n    }\n\n    /**\n     * Define what happens when the Update operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-update\n     * @return void\n     */\n    protected function setupUpdateOperation()\n    {\n        $this->setupCreateOperation();\n    }\n}\n"
        }
    ]
}