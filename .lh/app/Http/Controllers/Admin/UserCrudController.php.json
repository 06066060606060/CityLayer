{
    "sourceFile": "app/Http/Controllers/Admin/UserCrudController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1698522919689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698522932064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     {\n         $this->crud->addColumn([\n             'label' => 'Image URL',\n             'type' => 'text',\n+            'name' => 'avatar',\n             'prefix' => 'storage/uploads/avatar/',\n \n         ]);\n     }\n"
                },
                {
                    "date": 1698522965154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         $this->crud->addColumn([\n             'label' => 'Image URL',\n             'type' => 'text',\n             'name' => 'avatar',\n-            'prefix' => 'storage/uploads/avatar/',\n+            'prefix' => asset('storage/uploads/avatar/'),\n \n         ]);\n     }\n     /**\n"
                },
                {
                    "date": 1698522997435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,133 @@\n+<?php\n+\n+namespace App\\Http\\Controllers\\Admin;\n+\n+use App\\Http\\Requests\\UserRequest;\n+use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n+use App\\Mail\\AboMail;\n+use App\\Models\\Infosperso;\n+use Illuminate\\Support\\Facades\\Mail;\n+use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n+\n+/**\n+ * Class UserCrudController\n+ * @package App\\Http\\Controllers\\Admin\n+ * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n+ */\n+class UserCrudController extends CrudController\n+{\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n+    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n+    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n+    \n+    /**\n+     * Configure the CrudPanel object. Apply settings to all operations.\n+     * \n+     * @return void\n+     */\n+    public function setup()\n+    {\n+        CRUD::setModel(\\App\\Models\\User::class);\n+        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n+        CRUD::setEntityNameStrings('user', 'users');\n+    }\n+\n+    function getFieldsData()\n+    {\n+        $this->crud->addColumn([\n+            'label' => 'Image URL',\n+            'type' => 'text',\n+            'name' => 'avatar',\n+            'prefix' => asset('storage/uploads/avatar/').'/',\n+\n+        ]);\n+    }\n+    /**\n+     * Define what happens when the List operation is loaded.\n+     * \n+     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n+     * @return void\n+     */\n+    protected function setupListOperation()\n+    {\n+        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n+        $this->getFieldsData();\n+        CRUD::column('name');\n+        CRUD::column('email');\n+        CRUD::column('score')->type('number');\n+        //get score from infosperso class where user_id = id\n+\n+ \n+        $this->crud->enableExportButtons();\n+       \n+\n+        /**\n+         * Columns can be defined using the fluent syntax or array syntax:\n+         * - CRUD::column('price')->type('number');\n+         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n+         */\n+    }\n+\n+    /**\n+     * Define what happens when the Create operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-create\n+     * @return void\n+     */\n+    protected function setupCreateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('password');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+            CRUD::field('score')->type('number');\n+              \n+        /**\n+         * Fields can be defined using the fluent syntax or array syntax:\n+         * - CRUD::field('price')->type('number');\n+         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n+         */\n+    }\n+\n+ \n+\n+\n+    /**\n+     * Define what happens when the Update operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-update\n+     * @return void\n+     */\n+    protected function setupUpdateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('score')->type('number');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+    }\n+}\n"
                },
                {
                    "date": 1698523005134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         $this->crud->addColumn([\n             'label' => 'Image URL',\n             'type' => 'text',\n             'name' => 'avatar',\n-            'prefix' => asset('storage/uploads/avatar/').'/',\n+            'prefix' => asset('storage/uploads/avatar').'/',\n \n         ]);\n     }\n     /**\n@@ -130,137 +130,4 @@\n                 'user' => 'user',\n             ]]);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers\\Admin;\n-\n-use App\\Http\\Requests\\UserRequest;\n-use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n-use App\\Mail\\AboMail;\n-use App\\Models\\Infosperso;\n-use Illuminate\\Support\\Facades\\Mail;\n-use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n-\n-/**\n- * Class UserCrudController\n- * @package App\\Http\\Controllers\\Admin\n- * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n- */\n-class UserCrudController extends CrudController\n-{\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n-    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n-    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n-    \n-    /**\n-     * Configure the CrudPanel object. Apply settings to all operations.\n-     * \n-     * @return void\n-     */\n-    public function setup()\n-    {\n-        CRUD::setModel(\\App\\Models\\User::class);\n-        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n-        CRUD::setEntityNameStrings('user', 'users');\n-    }\n-\n-    function getFieldsData()\n-    {\n-        $this->crud->addColumn([\n-            'label' => 'Image URL',\n-            'type' => 'text',\n-            'name' => 'avatar',\n-            'prefix' => asset('storage/uploads/avatar/'),\n-\n-        ]);\n-    }\n-    /**\n-     * Define what happens when the List operation is loaded.\n-     * \n-     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n-     * @return void\n-     */\n-    protected function setupListOperation()\n-    {\n-        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n-        $this->getFieldsData();\n-        CRUD::column('name');\n-        CRUD::column('email');\n-        CRUD::column('score')->type('number');\n-        //get score from infosperso class where user_id = id\n-\n- \n-        $this->crud->enableExportButtons();\n-       \n-\n-        /**\n-         * Columns can be defined using the fluent syntax or array syntax:\n-         * - CRUD::column('price')->type('number');\n-         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n-         */\n-    }\n-\n-    /**\n-     * Define what happens when the Create operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-create\n-     * @return void\n-     */\n-    protected function setupCreateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('password');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-            CRUD::field('score')->type('number');\n-              \n-        /**\n-         * Fields can be defined using the fluent syntax or array syntax:\n-         * - CRUD::field('price')->type('number');\n-         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n-         */\n-    }\n-\n- \n-\n-\n-    /**\n-     * Define what happens when the Update operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-update\n-     * @return void\n-     */\n-    protected function setupUpdateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('score')->type('number');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-    }\n-}\n"
                },
                {
                    "date": 1698523037709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n     {\n         CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n         $this->getFieldsData();\n         CRUD::column('name');\n+        CRUD::column('name');\n         CRUD::column('email');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n"
                },
                {
                    "date": 1698523055662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,10 @@\n     protected function setupListOperation()\n     {\n         CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n         $this->getFieldsData();\n+        CRUD::column('id')->label('User ID');\n         CRUD::column('name');\n-        CRUD::column('name');\n         CRUD::column('email');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n"
                },
                {
                    "date": 1698523072144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n     {\n         CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n         $this->getFieldsData();\n         CRUD::column('id')->label('User ID');\n+        CRUD::column('id')->label('User name');\n         CRUD::column('name');\n         CRUD::column('email');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n"
                },
                {
                    "date": 1698523086762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n         CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n         $this->getFieldsData();\n         CRUD::column('id')->label('User ID');\n         CRUD::column('id')->label('User name');\n-        CRUD::column('name');\n         CRUD::column('email');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n"
                },
                {
                    "date": 1698523098699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n         $this->getFieldsData();\n         CRUD::column('id')->label('User ID');\n         CRUD::column('id')->label('User name');\n         CRUD::column('email');\n+        Age\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n"
                },
                {
                    "date": 1698523105821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+<?php\n+\n+namespace App\\Http\\Controllers\\Admin;\n+\n+use App\\Http\\Requests\\UserRequest;\n+use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n+use App\\Mail\\AboMail;\n+use App\\Models\\Infosperso;\n+use Illuminate\\Support\\Facades\\Mail;\n+use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n+\n+/**\n+ * Class UserCrudController\n+ * @package App\\Http\\Controllers\\Admin\n+ * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n+ */\n+class UserCrudController extends CrudController\n+{\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n+    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n+    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n+    \n+    /**\n+     * Configure the CrudPanel object. Apply settings to all operations.\n+     * \n+     * @return void\n+     */\n+    public function setup()\n+    {\n+        CRUD::setModel(\\App\\Models\\User::class);\n+        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n+        CRUD::setEntityNameStrings('user', 'users');\n+    }\n+\n+    function getFieldsData()\n+    {\n+        $this->crud->addColumn([\n+            'label' => 'Image URL',\n+            'type' => 'text',\n+            'name' => 'avatar',\n+            'prefix' => asset('storage/uploads/avatar').'/',\n+\n+        ]);\n+    }\n+    /**\n+     * Define what happens when the List operation is loaded.\n+     * \n+     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n+     * @return void\n+     */\n+    protected function setupListOperation()\n+    {\n+        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n+        $this->getFieldsData();\n+        CRUD::column('id')->label('User ID');\n+        CRUD::column('id')->label('User name');\n+        CRUD::column('email');\n+        Age\n+        Gender\n+        Education\n+        Tags\n+        CRUD::column('score')->type('number');\n+        //get score from infosperso class where user_id = id\n+\n+ \n+        $this->crud->enableExportButtons();\n+       \n+\n+        /**\n+         * Columns can be defined using the fluent syntax or array syntax:\n+         * - CRUD::column('price')->type('number');\n+         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n+         */\n+    }\n+\n+    /**\n+     * Define what happens when the Create operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-create\n+     * @return void\n+     */\n+    protected function setupCreateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('password');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+            CRUD::field('score')->type('number');\n+              \n+        /**\n+         * Fields can be defined using the fluent syntax or array syntax:\n+         * - CRUD::field('price')->type('number');\n+         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n+         */\n+    }\n+\n+ \n+\n+\n+    /**\n+     * Define what happens when the Update operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-update\n+     * @return void\n+     */\n+    protected function setupUpdateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('score')->type('number');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+    }\n+}\n"
                },
                {
                    "date": 1698523111642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,10 @@\n         Age\n         Gender\n         Education\n         Tags\n+        Number of place\n+        Number of observation\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n@@ -135,139 +137,4 @@\n                 'user' => 'user',\n             ]]);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers\\Admin;\n-\n-use App\\Http\\Requests\\UserRequest;\n-use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n-use App\\Mail\\AboMail;\n-use App\\Models\\Infosperso;\n-use Illuminate\\Support\\Facades\\Mail;\n-use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n-\n-/**\n- * Class UserCrudController\n- * @package App\\Http\\Controllers\\Admin\n- * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n- */\n-class UserCrudController extends CrudController\n-{\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n-    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n-    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n-    \n-    /**\n-     * Configure the CrudPanel object. Apply settings to all operations.\n-     * \n-     * @return void\n-     */\n-    public function setup()\n-    {\n-        CRUD::setModel(\\App\\Models\\User::class);\n-        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n-        CRUD::setEntityNameStrings('user', 'users');\n-    }\n-\n-    function getFieldsData()\n-    {\n-        $this->crud->addColumn([\n-            'label' => 'Image URL',\n-            'type' => 'text',\n-            'name' => 'avatar',\n-            'prefix' => asset('storage/uploads/avatar').'/',\n-\n-        ]);\n-    }\n-    /**\n-     * Define what happens when the List operation is loaded.\n-     * \n-     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n-     * @return void\n-     */\n-    protected function setupListOperation()\n-    {\n-        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n-        $this->getFieldsData();\n-        CRUD::column('id')->label('User ID');\n-        CRUD::column('id')->label('User name');\n-        CRUD::column('email');\n-        Age\n-        CRUD::column('score')->type('number');\n-        //get score from infosperso class where user_id = id\n-\n- \n-        $this->crud->enableExportButtons();\n-       \n-\n-        /**\n-         * Columns can be defined using the fluent syntax or array syntax:\n-         * - CRUD::column('price')->type('number');\n-         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n-         */\n-    }\n-\n-    /**\n-     * Define what happens when the Create operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-create\n-     * @return void\n-     */\n-    protected function setupCreateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('password');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-            CRUD::field('score')->type('number');\n-              \n-        /**\n-         * Fields can be defined using the fluent syntax or array syntax:\n-         * - CRUD::field('price')->type('number');\n-         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n-         */\n-    }\n-\n- \n-\n-\n-    /**\n-     * Define what happens when the Update operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-update\n-     * @return void\n-     */\n-    protected function setupUpdateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('score')->type('number');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-    }\n-}\n"
                },
                {
                    "date": 1698523127189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,14 +57,18 @@\n         $this->getFieldsData();\n         CRUD::column('id')->label('User ID');\n         CRUD::column('id')->label('User name');\n         CRUD::column('email');\n-        Age\n-        Gender\n-        Education\n-        Tags\n-        Number of place\n-        Number of observation\n+        // Age\n+        // Gender\n+        // Education\n+        // Tags\n+        // Number of place\n+        // Number of observation\n+        // Level \n+        // Badges list names\n+        // Badges list url\n+\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n"
                },
                {
                    "date": 1698523134503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n         $this->getFieldsData();\n         CRUD::column('id')->label('User ID');\n         CRUD::column('id')->label('User name');\n         CRUD::column('email');\n+\n         // Age\n         // Gender\n         // Education\n         // Tags\n@@ -66,8 +67,9 @@\n         // Number of observation\n         // Level \n         // Badges list names\n         // Badges list url\n+        // Signup Date\n \n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n"
                },
                {
                    "date": 1698523263493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n         // Badges list names\n         // Badges list url\n         // Signup Date\n \n+        CRUD::column('age')->type('number');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n"
                },
                {
                    "date": 1698523316012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n         // Badges list names\n         // Badges list url\n         // Signup Date\n \n-        CRUD::column('age')->type('number');\n         CRUD::column('score')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n"
                },
                {
                    "date": 1698523390643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n         // Badges list url\n         // Signup Date\n \n         CRUD::column('score')->type('number');\n+        CRUD::column('infosperso.age')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n         $this->crud->enableExportButtons();\n"
                },
                {
                    "date": 1698523411421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         // Badges list url\n         // Signup Date\n \n         CRUD::column('score')->type('number');\n-        CRUD::column('infosperso.age')->type('number');\n+        CRUD::column('infosperso.age')->label('Age')->type('number');\n         //get score from infosperso class where user_id = id\n \n  \n         $this->crud->enableExportButtons();\n"
                },
                {
                    "date": 1698523442982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,21 +58,23 @@\n         CRUD::column('id')->label('User ID');\n         CRUD::column('id')->label('User name');\n         CRUD::column('email');\n \n-        // Age\n-        // Gender\n-        // Education\n+        CRUD::column('infosperso.age')->label('Age')->type('text');\n+        CRUD::column('infosperso.gender')->label('Gender')->type('text');\n+        CRUD::column('infosperso.gender')->label('Education')->type('text');\n+\n+        // \n         // Tags\n         // Number of place\n         // Number of observation\n         // Level \n         // Badges list names\n         // Badges list url\n         // Signup Date\n \n-        CRUD::column('score')->type('number');\n-        CRUD::column('infosperso.age')->label('Age')->type('number');\n+       \n+        \n         //get score from infosperso class where user_id = id\n \n  \n         $this->crud->enableExportButtons();\n"
                },
                {
                    "date": 1698523448260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         CRUD::column('email');\n \n         CRUD::column('infosperso.age')->label('Age')->type('text');\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n-        CRUD::column('infosperso.gender')->label('Education')->type('text');\n+        CRUD::column('infosperso.education')->label('Education')->type('text');\n \n         // \n         // Tags\n         // Number of place\n"
                },
                {
                    "date": 1698523458419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         CRUD::column('email');\n \n         CRUD::column('infosperso.age')->label('Age')->type('text');\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n-        CRUD::column('infosperso.education')->label('Education')->type('text');\n+        CRUD::column('infosperso.profession')->label('Education')->type('text');\n \n         // \n         // Tags\n         // Number of place\n"
                },
                {
                    "date": 1698523470036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n \n         CRUD::column('infosperso.age')->label('Age')->type('text');\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n         CRUD::column('infosperso.profession')->label('Education')->type('text');\n+        CRUD::column('infosperso.Tags')->label('Tags')->type('text');\n \n         // \n         // Tags\n         // Number of place\n"
                },
                {
                    "date": 1698523503434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+<?php\n+\n+namespace App\\Http\\Controllers\\Admin;\n+\n+use App\\Http\\Requests\\UserRequest;\n+use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n+use App\\Mail\\AboMail;\n+use App\\Models\\Infosperso;\n+use Illuminate\\Support\\Facades\\Mail;\n+use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n+\n+/**\n+ * Class UserCrudController\n+ * @package App\\Http\\Controllers\\Admin\n+ * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n+ */\n+class UserCrudController extends CrudController\n+{\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n+    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n+    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n+    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n+    \n+    /**\n+     * Configure the CrudPanel object. Apply settings to all operations.\n+     * \n+     * @return void\n+     */\n+    public function setup()\n+    {\n+        CRUD::setModel(\\App\\Models\\User::class);\n+        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n+        CRUD::setEntityNameStrings('user', 'users');\n+    }\n+\n+    function getFieldsData()\n+    {\n+        $this->crud->addColumn([\n+            'label' => 'Image URL',\n+            'type' => 'text',\n+            'name' => 'avatar',\n+            'prefix' => asset('storage/uploads/avatar').'/',\n+\n+        ]);\n+    }\n+    /**\n+     * Define what happens when the List operation is loaded.\n+     * \n+     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n+     * @return void\n+     */\n+    protected function setupListOperation()\n+    {\n+        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n+        $this->getFieldsData();\n+        CRUD::column('id')->label('User ID');\n+        CRUD::column('id')->label('User name');\n+        CRUD::column('email');\n+\n+        CRUD::column('infosperso.age')->label('Age')->type('text');\n+        CRUD::column('infosperso.gender')->label('Gender')->type('text');\n+        CRUD::column('infosperso.profession')->label('Education')->type('text');\n+        CRUD::column('infosperso.preferences')->label('Tags')->type('text');\n+\n+        // \n+        // Tags\n+        // Number of place\n+        // Number of observation\n+        // Level \n+        // Badges list names\n+        // Badges list url\n+        // Signup Date\n+\n+       \n+        \n+        //get score from infosperso class where user_id = id\n+\n+ \n+        $this->crud->enableExportButtons();\n+       \n+\n+        /**\n+         * Columns can be defined using the fluent syntax or array syntax:\n+         * - CRUD::column('price')->type('number');\n+         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n+         */\n+    }\n+\n+    /**\n+     * Define what happens when the Create operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-create\n+     * @return void\n+     */\n+    protected function setupCreateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('password');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+            CRUD::field('score')->type('number');\n+              \n+        /**\n+         * Fields can be defined using the fluent syntax or array syntax:\n+         * - CRUD::field('price')->type('number');\n+         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n+         */\n+    }\n+\n+ \n+\n+\n+    /**\n+     * Define what happens when the Update operation is loaded.\n+     * \n+     * @see https://backpackforlaravel.com/docs/crud-operation-update\n+     * @return void\n+     */\n+    protected function setupUpdateOperation()\n+    {\n+        $this->crud->setValidation([\n+            'name' => 'required|min:2',\n+        ]);\n+        CRUD::field('image')->label('avatar');\n+        CRUD::field('name');\n+        CRUD::field('email');\n+        CRUD::field('score')->type('number');\n+        $this->crud->addField([   // select_from_array\n+            'name'        => 'role',\n+            'label'       => \"role\",\n+            'type'        => 'select_from_array',\n+            'options'     => [\n+                'admin' => 'admin',\n+                'user' => 'user',\n+            ]]);\n+    }\n+}\n"
                },
                {
                    "date": 1698523546127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n         CRUD::column('infosperso.age')->label('Age')->type('text');\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n         CRUD::column('infosperso.profession')->label('Education')->type('text');\n-        CRUD::column('infosperso.preferences')->label('Tags')->type('text');\n+        CRUD::column('infosperso.preferences')->label('Tags')->type('json');\n \n         // \n         // Tags\n         // Number of place\n@@ -147,154 +147,4 @@\n                 'user' => 'user',\n             ]]);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers\\Admin;\n-\n-use App\\Http\\Requests\\UserRequest;\n-use Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\n-use App\\Mail\\AboMail;\n-use App\\Models\\Infosperso;\n-use Illuminate\\Support\\Facades\\Mail;\n-use Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n-\n-/**\n- * Class UserCrudController\n- * @package App\\Http\\Controllers\\Admin\n- * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n- */\n-class UserCrudController extends CrudController\n-{\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n-    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n-    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n-    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n-    \n-    /**\n-     * Configure the CrudPanel object. Apply settings to all operations.\n-     * \n-     * @return void\n-     */\n-    public function setup()\n-    {\n-        CRUD::setModel(\\App\\Models\\User::class);\n-        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n-        CRUD::setEntityNameStrings('user', 'users');\n-    }\n-\n-    function getFieldsData()\n-    {\n-        $this->crud->addColumn([\n-            'label' => 'Image URL',\n-            'type' => 'text',\n-            'name' => 'avatar',\n-            'prefix' => asset('storage/uploads/avatar').'/',\n-\n-        ]);\n-    }\n-    /**\n-     * Define what happens when the List operation is loaded.\n-     * \n-     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n-     * @return void\n-     */\n-    protected function setupListOperation()\n-    {\n-        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n-        $this->getFieldsData();\n-        CRUD::column('id')->label('User ID');\n-        CRUD::column('id')->label('User name');\n-        CRUD::column('email');\n-\n-        CRUD::column('infosperso.age')->label('Age')->type('text');\n-        CRUD::column('infosperso.gender')->label('Gender')->type('text');\n-        CRUD::column('infosperso.profession')->label('Education')->type('text');\n-        CRUD::column('infosperso.Tags')->label('Tags')->type('text');\n-\n-        // \n-        // Tags\n-        // Number of place\n-        // Number of observation\n-        // Level \n-        // Badges list names\n-        // Badges list url\n-        // Signup Date\n-\n-       \n-        \n-        //get score from infosperso class where user_id = id\n-\n- \n-        $this->crud->enableExportButtons();\n-       \n-\n-        /**\n-         * Columns can be defined using the fluent syntax or array syntax:\n-         * - CRUD::column('price')->type('number');\n-         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n-         */\n-    }\n-\n-    /**\n-     * Define what happens when the Create operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-create\n-     * @return void\n-     */\n-    protected function setupCreateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('password');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-            CRUD::field('score')->type('number');\n-              \n-        /**\n-         * Fields can be defined using the fluent syntax or array syntax:\n-         * - CRUD::field('price')->type('number');\n-         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n-         */\n-    }\n-\n- \n-\n-\n-    /**\n-     * Define what happens when the Update operation is loaded.\n-     * \n-     * @see https://backpackforlaravel.com/docs/crud-operation-update\n-     * @return void\n-     */\n-    protected function setupUpdateOperation()\n-    {\n-        $this->crud->setValidation([\n-            'name' => 'required|min:2',\n-        ]);\n-        CRUD::field('image')->label('avatar');\n-        CRUD::field('name');\n-        CRUD::field('email');\n-        CRUD::field('score')->type('number');\n-        $this->crud->addField([   // select_from_array\n-            'name'        => 'role',\n-            'label'       => \"role\",\n-            'type'        => 'select_from_array',\n-            'options'     => [\n-                'admin' => 'admin',\n-                'user' => 'user',\n-            ]]);\n-    }\n-}\n"
                },
                {
                    "date": 1698523553219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n         CRUD::column('infosperso.age')->label('Age')->type('text');\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n         CRUD::column('infosperso.profession')->label('Education')->type('text');\n-        CRUD::column('infosperso.preferences')->label('Tags')->type('json');\n+        CRUD::column('infosperso.preferences')->label('Tags')->type('text');\n \n         // \n         // Tags\n         // Number of place\n"
                },
                {
                    "date": 1698523562484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,9 @@\n         CRUD::column('infosperso.gender')->label('Gender')->type('text');\n         CRUD::column('infosperso.profession')->label('Education')->type('text');\n         CRUD::column('infosperso.preferences')->label('Tags')->type('text');\n \n-        // \n-        // Tags\n+\n         // Number of place\n         // Number of observation\n         // Level \n         // Badges list names\n"
                }
            ],
            "date": 1698522919689,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Requests\\UserRequest;\nuse Backpack\\CRUD\\app\\Http\\Controllers\\CrudController;\nuse App\\Mail\\AboMail;\nuse App\\Models\\Infosperso;\nuse Illuminate\\Support\\Facades\\Mail;\nuse Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanelFacade as CRUD;\n\n/**\n * Class UserCrudController\n * @package App\\Http\\Controllers\\Admin\n * @property-read \\Backpack\\CRUD\\app\\Library\\CrudPanel\\CrudPanel $crud\n */\nclass UserCrudController extends CrudController\n{\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ListOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\CreateOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\UpdateOperation;\n    use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\DeleteOperation;\n    // use \\Backpack\\CRUD\\app\\Http\\Controllers\\Operations\\ShowOperation;\n    use \\App\\Http\\Controllers\\Admin\\Operations\\EmailOperation;\n    \n    /**\n     * Configure the CrudPanel object. Apply settings to all operations.\n     * \n     * @return void\n     */\n    public function setup()\n    {\n        CRUD::setModel(\\App\\Models\\User::class);\n        CRUD::setRoute(config('backpack.base.route_prefix') . '/user');\n        CRUD::setEntityNameStrings('user', 'users');\n    }\n\n    function getFieldsData()\n    {\n        $this->crud->addColumn([\n            'label' => 'Image URL',\n            'type' => 'text',\n            'prefix' => 'storage/uploads/avatar/',\n\n        ]);\n    }\n    /**\n     * Define what happens when the List operation is loaded.\n     * \n     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries\n     * @return void\n     */\n    protected function setupListOperation()\n    {\n        CRUD::setOperationSetting('lineButtonsAsDropdown', true);\n        $this->getFieldsData();\n        CRUD::column('name');\n        CRUD::column('email');\n        CRUD::column('score')->type('number');\n        //get score from infosperso class where user_id = id\n\n \n        $this->crud->enableExportButtons();\n       \n\n        /**\n         * Columns can be defined using the fluent syntax or array syntax:\n         * - CRUD::column('price')->type('number');\n         * - CRUD::addColumn(['name' => 'price', 'type' => 'number']); \n         */\n    }\n\n    /**\n     * Define what happens when the Create operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-create\n     * @return void\n     */\n    protected function setupCreateOperation()\n    {\n        $this->crud->setValidation([\n            'name' => 'required|min:2',\n        ]);\n        CRUD::field('image')->label('avatar');\n        CRUD::field('name');\n        CRUD::field('email');\n        CRUD::field('password');\n        $this->crud->addField([   // select_from_array\n            'name'        => 'role',\n            'label'       => \"role\",\n            'type'        => 'select_from_array',\n            'options'     => [\n                'admin' => 'admin',\n                'user' => 'user',\n            ]]);\n            CRUD::field('score')->type('number');\n              \n        /**\n         * Fields can be defined using the fluent syntax or array syntax:\n         * - CRUD::field('price')->type('number');\n         * - CRUD::addField(['name' => 'price', 'type' => 'number'])); \n         */\n    }\n\n \n\n\n    /**\n     * Define what happens when the Update operation is loaded.\n     * \n     * @see https://backpackforlaravel.com/docs/crud-operation-update\n     * @return void\n     */\n    protected function setupUpdateOperation()\n    {\n        $this->crud->setValidation([\n            'name' => 'required|min:2',\n        ]);\n        CRUD::field('image')->label('avatar');\n        CRUD::field('name');\n        CRUD::field('email');\n        CRUD::field('score')->type('number');\n        $this->crud->addField([   // select_from_array\n            'name'        => 'role',\n            'label'       => \"role\",\n            'type'        => 'select_from_array',\n            'options'     => [\n                'admin' => 'admin',\n                'user' => 'user',\n            ]]);\n    }\n}\n"
        }
    ]
}